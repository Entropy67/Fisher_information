(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    402073,       7762]
NotebookOptionsPosition[    396089,       7660]
NotebookOutlinePosition[    396481,       7676]
CellTagsIndexPosition[    396438,       7673]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fisher information in antigen level (general case)", "Section",
 CellChangeTimes->{{3.869959804070133*^9, 
  3.8699598293334017`*^9}},ExpressionUUID->"94f58027-8fdc-4dbc-8405-\
62b292ea7489"],

Cell["\<\
Calculate FI in n_ag in the presence of rebinding and force-sharing. We first \
establish coupled equation from which one can obtain the mean and variance of \
n_ag. Then we calculate the lower bound of FI based on Eq.S51 in SI. 
\
\>", "Text",
 CellChangeTimes->{{3.8699598335391912`*^9, 3.8699599299515247`*^9}, {
  3.869966004508855*^9, 
  3.869966011761489*^9}},ExpressionUUID->"a5b1c13d-0ae4-4158-ac84-\
2a40d346d011"],

Cell[CellGroupData[{

Cell["1. Define some utility functions", "Subsection",
 CellChangeTimes->{{3.8699601402941*^9, 3.869960147166979*^9}, {
  3.869960241479896*^9, 
  3.869960242155829*^9}},ExpressionUUID->"dfeaaa57-bd89-4116-98bf-\
ec8c6d8a8a5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
     "==="}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"delta", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Delta", "[", 
     RowBox[{"m_", ",", " ", "n_"}], "]"}], ":=", 
    RowBox[{"DiscreteDelta", "[", 
     RowBox[{"m", "-", "n"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"theta", " ", "step", " ", "function"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Theta", "[", 
     RowBox[{"m_", ",", " ", 
      RowBox[{"m0_", ":", "0"}]}], "]"}], ":=", 
    RowBox[{"UnitStep", "[", 
     RowBox[{"m", "-", "m0"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"translate", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"translate", " ", "coordinate", " ", 
     RowBox[{"(", 
      RowBox[{"m", ",", " ", "n"}], ")"}], " ", "into", " ", "1", "D", " ", 
     "index"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Trans", "[", 
     RowBox[{"m_", ",", " ", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"m", "*", 
      RowBox[{"(", 
       RowBox[{"N0", "+", "1"}], ")"}]}], "+", "n", "+", "1"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "translate", " ", "back", " ", "from", " ", "1", "D", " ", "index", " ", 
     "to", " ", 
     RowBox[{"(", 
      RowBox[{"m", ",", " ", "n"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BackTrans", "[", "ii_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ii", "-", "1"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"N0", "+", "1"}], ")"}]}], ",", "0"}], "]"}], "]"}], ",", 
      " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"ii", "-", "1"}], ",", " ", 
        RowBox[{"N0", "+", "1"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"force", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Kf", "[", 
      RowBox[{"m_", ",", " ", "F_", ",", "f_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"m", "\[Equal]", "0"}], ",", "0", ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"F", "/", 
         RowBox[{"(", 
          RowBox[{"m", " ", "f"}], ")"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", 
      "==="}], "=", "="}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.78353164372723*^9, 3.783531690425517*^9}, {
  3.783531743444707*^9, 3.783531755326791*^9}, {3.8699601724814177`*^9, 
  3.8699601730525723`*^9}, {3.869960222224225*^9, 3.8699602282777147`*^9}, {
  3.869960433150981*^9, 3.869960485309759*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[2]:=",ExpressionUUID->"9ceeea7d-1b04-42db-8011-78e7956f095f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Specify parameters", "Subsection",
 CellChangeTimes->{{3.8699606070082817`*^9, 
  3.8699606210292797`*^9}},ExpressionUUID->"f5c923a3-ee2c-4c24-aca7-\
aedd73b71cdd"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "k1off", ",", " ", "k2off", ",", " ", "k1on", ",", " ", "k2on", ",", " ", 
   "N0", ",", " ", "m", ",", " ", "t", ",", " ", "n", ",", " ", "x", ",", "F",
    ",", "f1", ",", "f2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k1off", " ", "=", " ", "1"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"APC", "-", 
    RowBox[{"Ag", " ", "off", " ", "rate"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k2off", "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"BCR", "-", 
    RowBox[{"Ag", " ", "off", " ", "rate"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kon", "=", "1"}], ";", 
   RowBox[{"(*", 
    RowBox[{"on", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"k1on", " ", "=", " ", "0"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"APC", "-", 
    RowBox[{"Ag", " ", "on", " ", "rate"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k2on", " ", "=", " ", "k1on"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"BCR", "-", 
    RowBox[{"Ag", " ", "on", " ", "rate"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "=", "10"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"force", ",", " ", "pN"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f1", "=", 
    RowBox[{"4012", "/", "1500"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"kT", " ", "/", " ", "bond"}], " ", "length", " ", "of", " ", 
       "APC"}], "-", "Ag"}], ",", " ", "pN"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"f2", "=", 
    RowBox[{"4012", "/", "2000"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"kT", " ", "/", " ", "bond"}], " ", "lenght", " ", "of", " ", 
       "BCR"}], "-", "Ag"}], ",", " ", "pN"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"N0", " ", "=", " ", "20"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"cluster", " ", "size"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.869960630176836*^9, 3.8699607598490677`*^9}, {
  3.8699608540438337`*^9, 3.8699608763093777`*^9}, {3.869961710999028*^9, 
  3.869961712873033*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[7]:=",ExpressionUUID->"fb2f8218-b213-40a2-807a-1c451b3fc065"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Calculate the exact antigen level distribution.", "Subsection",
 CellChangeTimes->{{3.869961718206676*^9, 3.8699617346985703`*^9}, {
  3.869962444599119*^9, 
  3.8699624528448257`*^9}},ExpressionUUID->"0231e4e9-9faa-4b63-bd37-\
b10ccf78a956"],

Cell["\<\
Here we calculate the exact antigen level distribution P(n). It can be used \
to validate our calculation of mean and variance later. \
\>", "Text",
 CellChangeTimes->{{3.86996240062529*^9, 
  3.869962442311803*^9}},ExpressionUUID->"8a0db440-07c6-4b54-ac3c-\
503df848a7b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"solverN", ",", " ", "solver"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "k2off", ",", " ", "F", ",", " ", "koon", ",", " ", "check", ",", " ", 
    "k1off", ",", " ", "f1", ",", " ", "f2"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calculate", " ", "the", " ", "probability", " ", "distribution", " ", 
    "of", " ", 
    RowBox[{"n_ag", ":", " ", 
     RowBox[{"P", 
      RowBox[{"(", "nag", ")"}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solverN", "[", 
   RowBox[{"k2off_", ",", " ", "F_", ",", " ", "kon_", ",", " ", 
    RowBox[{"check_", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"threshold", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "4"}], ")"}]}]}], ",", "\[IndentingNewLine]", " ", 
      RowBox[{"k1off", "=", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"f1", "=", 
       RowBox[{"4012", "/", "1500"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"f2", "=", 
       RowBox[{"4012", "/", "2000"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"If", " ", "F"}], "=", "0"}], ",", " ", 
      RowBox[{"the", " ", "distribution", " ", "is", " ", "Binomial"}]}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Otherwise", ",", " ", 
      RowBox[{
      "we", " ", "need", " ", "to", " ", "solve", " ", "the", " ", "linear", 
       " ", "equations", " ", "about", " ", "Qmn"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "F", "]"}], "<", "threshold"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PTable", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"Binomial", "[", 
               RowBox[{"N0", ",", " ", "i"}], "]"}], 
              RowBox[{"k1off", "^", "i"}], " ", 
              RowBox[{
               RowBox[{"k2off", "^", 
                RowBox[{"(", 
                 RowBox[{"N0", "-", "i"}], ")"}]}], "/", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k1off", "+", "k2off"}], ")"}], "^", "N0"}]}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "N0"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PTable", " ", "=", 
        RowBox[{"solver", "[", 
         RowBox[{
         "k2off", ",", " ", "F", ",", " ", "kon", ",", " ", "k1off", ",", " ",
           "f1", ",", " ", "f2", ",", " ", "check", ",", " ", 
          RowBox[{"simplify", "=", "False"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Check", " ", "the", " ", "total", " ", "probability"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"PTable", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", " ", 
              RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}], "-", "1"}], "]"}], 
        ">", "threshold"}], ",", " ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<total probability not equal 1, sum=\>\"", ",", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"PTable", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", " ", 
             RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "PTable"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.783782149976941*^9, 3.783782201404853*^9}, {
   3.7837822736745768`*^9, 3.783782308917474*^9}, {3.783782379543495*^9, 
   3.783782685577488*^9}, {3.7837827220347557`*^9, 3.78378272610905*^9}, {
   3.783782764777371*^9, 3.783783062476741*^9}, {3.7837843253768253`*^9, 
   3.783784333422592*^9}, {3.7837843749861183`*^9, 3.783784393268207*^9}, {
   3.7837844684669943`*^9, 3.7837844688771667`*^9}, {3.783785420737369*^9, 
   3.783785421524125*^9}, {3.7837855583079653`*^9, 3.7837855620329*^9}, 
   3.7837857669337883`*^9, {3.783785833582491*^9, 3.7837858379468327`*^9}, {
   3.7837858701610823`*^9, 3.7837858833223743`*^9}, {3.783786185725226*^9, 
   3.783786191956196*^9}, {3.783786319956058*^9, 3.783786322685813*^9}, {
   3.7837863584524803`*^9, 3.783786368077544*^9}, {3.78378705109739*^9, 
   3.7837871188459597`*^9}, {3.7837871591252327`*^9, 3.78378723609023*^9}, {
   3.7837873502003717`*^9, 3.783787387364071*^9}, {3.7837879607308064`*^9, 
   3.78378796157369*^9}, {3.783787994656664*^9, 3.783787995670516*^9}, {
   3.7837880272216187`*^9, 3.78378802833576*^9}, {3.783788059720747*^9, 
   3.783788063219727*^9}, {3.783792667708303*^9, 3.783792738804942*^9}, {
   3.7837941105826483`*^9, 3.783794163395504*^9}, {3.8196934642100363`*^9, 
   3.81969346440082*^9}, {3.819735029276782*^9, 3.819735044595605*^9}, {
   3.819735116601824*^9, 3.819735140405716*^9}, {3.8197351928159323`*^9, 
   3.819735293422894*^9}, {3.819735527753577*^9, 3.819735533842249*^9}, {
   3.8197355655213842`*^9, 3.81973566412908*^9}, {3.819735801634872*^9, 
   3.819735876732834*^9}, {3.8197359790075083`*^9, 3.819735985908888*^9}, {
   3.819736073047381*^9, 3.8197361097267447`*^9}, {3.819736286104609*^9, 
   3.8197363534962873`*^9}, {3.819736389008662*^9, 3.81973651141687*^9}, {
   3.819736578931509*^9, 3.819736583507032*^9}, {3.819736887373959*^9, 
   3.819736905408675*^9}, {3.819736962262846*^9, 3.819737129734565*^9}, {
   3.8197373129450493`*^9, 3.819737317311593*^9}, {3.819737443131576*^9, 
   3.81973748833035*^9}, {3.819742443370894*^9, 3.819742444673374*^9}, {
   3.819764308849674*^9, 3.8197643259579153`*^9}, {3.8198989523057632`*^9, 
   3.819898952429021*^9}, {3.8228752780421762`*^9, 3.822875283532764*^9}, {
   3.869961774609816*^9, 3.869961774974204*^9}, {3.869961812112173*^9, 
   3.869961952796506*^9}, {3.86996212431698*^9, 3.869962167358131*^9}, {
   3.86996220636976*^9, 3.869962213442771*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[14]:=",ExpressionUUID->"6be0a5be-cc9f-495c-b886-47a5d1dcf48c"],

Cell["\<\
The following solver calculates the probability distribution of n_ag by \
solving linear equations of Qmn\
\>", "Text",
 CellChangeTimes->{{3.8699622343329287`*^9, 
  3.869962245436307*^9}},ExpressionUUID->"d315e619-f6b7-4512-996e-\
35dc6adb1b35"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"solver", "[", 
    RowBox[{
    "k2off_", ",", " ", "F_", ",", " ", "kon_", ",", " ", "k1off_", ",", " ", 
     "f1_", ",", " ", "f2_", ",", " ", 
     RowBox[{"check_", ":", "False"}], ",", " ", 
     RowBox[{"simplify_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "The", " ", "function", " ", "DecodeEntryN", " ", "calculates", " ", 
       "the", " ", "transition", " ", "rate", " ", "from", " ", "state", " ", 
       
       RowBox[{"(", 
        RowBox[{"m1", ",", "n1"}], ")"}], " ", "to", " ", 
       RowBox[{"(", 
        RowBox[{"m2", ",", "n2"}], ")"}], " ", "based", " ", "on", " ", "the",
        " ", "equation", " ", "of", " ", 
       RowBox[{"Qmn", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "DecodeEntryN", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DecodeEntryN", "[", 
        RowBox[{"m1_", ",", "n1_", ",", " ", "m2_", ",", " ", "n2_"}], "]"}], 
       ":=", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k1off", " ", 
           RowBox[{"Kf", "[", 
            RowBox[{
             RowBox[{"m1", "+", "1"}], ",", " ", "F", ",", " ", "f1"}], "]"}],
            " ", "*", " ", 
           RowBox[{"(", 
            RowBox[{"m1", "+", "1"}], ")"}], 
           RowBox[{"Delta", "[", 
            RowBox[{
             RowBox[{"m1", "+", "1"}], ",", " ", "m2"}], "]"}], 
           RowBox[{"Delta", "[", 
            RowBox[{
             RowBox[{"n1", "-", "1"}], ",", " ", "n2"}], "]"}], 
           RowBox[{"Theta", "[", 
            RowBox[{"n1", "-", "1"}], "]"}], 
           RowBox[{"Theta", "[", 
            RowBox[{"N0", ",", " ", 
             RowBox[{"m1", "+", "1"}]}], "]"}]}], "+", "\[IndentingNewLine]", 
          
          RowBox[{"k2off", " ", 
           RowBox[{"Kf", "[", 
            RowBox[{
             RowBox[{"m1", "+", "1"}], ",", " ", "F", ",", " ", "f2"}], "]"}],
            "*", 
           RowBox[{"(", 
            RowBox[{"m1", "+", "1"}], ")"}], 
           RowBox[{"Delta", "[", 
            RowBox[{
             RowBox[{"m1", "+", "1"}], ",", " ", "m2"}], "]"}], 
           RowBox[{"Delta", "[", 
            RowBox[{"n1", ",", "n2"}], "]"}], 
           RowBox[{"Theta", "[", 
            RowBox[{"N0", ",", " ", 
             RowBox[{"m1", "+", "1"}]}], "]"}]}], "+", "\[IndentingNewLine]", 
          
          RowBox[{"kon", "*", 
           RowBox[{"(", 
            RowBox[{"n1", "+", "1"}], ")"}], 
           RowBox[{"Delta", "[", 
            RowBox[{
             RowBox[{"m1", "-", "1"}], ",", "m2"}], "]"}], 
           RowBox[{"Delta", "[", 
            RowBox[{
             RowBox[{"n1", "+", "1"}], ",", " ", "n2"}], "]"}], 
           RowBox[{"Theta", "[", 
            RowBox[{
             RowBox[{"m1", "-", "1"}], ",", "1"}], "]"}], 
           RowBox[{"Theta", "[", 
            RowBox[{"N0", ",", " ", 
             RowBox[{"n1", "+", "1"}]}], "]"}]}], "+", "\[IndentingNewLine]", 
          
          RowBox[{"kon", "*", 
           RowBox[{"(", 
            RowBox[{"N0", "-", "m1", "-", "n1", "+", "1"}], ")"}], 
           RowBox[{"Delta", "[", 
            RowBox[{
             RowBox[{"m1", "-", "1"}], ",", " ", "m2"}], "]"}], 
           RowBox[{"Delta", "[", 
            RowBox[{"n1", ",", " ", "n2"}], "]"}], 
           RowBox[{"Theta", "[", 
            RowBox[{
             RowBox[{"m1", "-", "1"}], ",", "1"}], "]"}]}], "-", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k1off", " ", 
              RowBox[{"Kf", "[", 
               RowBox[{"m1", ",", " ", "F", ",", " ", "f1"}], "]"}], "*", 
              "m1"}], "+", 
             RowBox[{"k2off", " ", 
              RowBox[{"Kf", "[", 
               RowBox[{"m1", ",", " ", "F", ",", " ", "f2"}], "]"}], "*", 
              "m1"}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"N0", "-", "m1"}], ")"}], "*", "kon"}]}], ")"}], 
           RowBox[{"Delta", "[", 
            RowBox[{"m1", ",", "m2"}], "]"}], 
           RowBox[{"Delta", "[", 
            RowBox[{"n1", ",", "n2"}], "]"}]}]}], ")"}], 
        RowBox[{"Theta", "[", 
         RowBox[{"N0", ",", " ", 
          RowBox[{"m1", "+", "n1"}]}], "]"}], 
        RowBox[{"Theta", "[", 
         RowBox[{"N0", ",", " ", 
          RowBox[{"m2", "+", "n2"}]}], "]"}], 
        RowBox[{"Theta", "[", 
         RowBox[{"m2", ",", "1"}], "]"}], 
        RowBox[{"Theta", "[", 
         RowBox[{"m1", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "We", " ", "then", " ", "convert", " ", "the", " ", "transition", " ", 
        "matrix", " ", "in", " ", 
        RowBox[{"(", 
         RowBox[{"m", ",", "n"}], ")"}], " ", "space", " ", "into", " ", 
        "the", " ", "1", "D", " ", "index", " ", 
        RowBox[{"space", ".", "The"}], " ", "following", " ", "function", " ",
         "denotes", " ", "the", " ", "transition", " ", "rate", " ", "from", 
        " ", "state", " ", "ii", " ", "to", " ", "state", " ", 
        RowBox[{"jj", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "EntryN", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EntryN", "[", 
        RowBox[{"ii_", ",", " ", "jj_"}], "]"}], ":=", "\[IndentingNewLine]", 
       
       RowBox[{"DecodeEntryN", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"BackTrans", "[", "ii", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"BackTrans", "[", "ii", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"BackTrans", "[", "jj", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"BackTrans", "[", "jj", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Use", " ", "EntryN", " ", "to", " ", "establish", " ", "the", " ", 
        "transition", " ", "matrix", " ", "for", " ", "Qmn"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "A", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"N0", "+", "1"}], ")"}], "^", "2"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"N0", "+", "1"}], ")"}], "^", "2"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", " ", 
        RowBox[{"i", "<", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"N0", "+", "1"}], ")"}], "^", "2"}], "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", " ", 
           RowBox[{"j", "<", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"N0", "+", "1"}], ")"}], "^", "2"}], "+", "1"}]}], ",",
            " ", 
           RowBox[{"j", "++"}], ",", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"A", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
             RowBox[{"EntryN", "[", 
              RowBox[{"i", ",", " ", "j"}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "]"}], "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Initialize", " ", "state", " ", "vector"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", 
       RowBox[{"x", ",", "t", ",", "i"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"X", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "[", "i", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"N0", "+", "1"}], ")"}], "^", "2"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"vec", " ", "b"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "B", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"B", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"N0", "+", "1"}], ")"}], "^", "2"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B", "[", 
        RowBox[{"[", 
         RowBox[{"Trans", "[", 
          RowBox[{"N0", ",", " ", "0"}], "]"}], "]"}], "]"}], "=", 
       RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "In", " ", "the", " ", "following", " ", "we", " ", "will", " ", 
         "solve", " ", "the", " ", "linear", " ", "system", " ", "A", "*", 
         "X"}], " ", "=", " ", "B"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "system", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"system", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", ".", "X"}], "\[Equal]", "B"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"solve", " ", "the", " ", "linear", " ", "system"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "sol", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"NumberQ", "[", "k2off", "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"IntegerQ", "[", "k2off", "]"}], ",", " ", 
          RowBox[{"sol", "=", 
           RowBox[{"LinearSolve", "[", 
            RowBox[{"A", ",", " ", "B"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{"LinearSolve", "[", 
            RowBox[{"A", ",", " ", "B", ",", " ", 
             RowBox[{"Method", "->", "\"\<Multifrontal\>\""}]}], "]"}]}]}], 
         "]"}], ",", " ", 
        RowBox[{"sol", "=", 
         RowBox[{"LinearSolve", "[", 
          RowBox[{"A", ",", " ", "B"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"load", " ", "the", " ", "solution"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", 
       RowBox[{"Q1Table", ",", "PTable"}], "]"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Q1Table", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"simplify", ",", " ", 
           RowBox[{"Simplify", "[", 
            RowBox[{"sol", "[", 
             RowBox[{"[", 
              RowBox[{"Trans", "[", 
               RowBox[{"1", ",", " ", "i"}], "]"}], "]"}], "]"}], "]"}], ",", 
           " ", 
           RowBox[{"sol", "[", 
            RowBox[{"[", 
             RowBox[{"Trans", "[", 
              RowBox[{"1", ",", " ", "i"}], "]"}], "]"}], "]"}]}], "]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "0", " ", ",", "N0"}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Extract", " ", "P", 
        RowBox[{"(", "n", ")"}], " ", "from", " ", "the", " ", "solution", 
        " ", "of", " ", "Qmn"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"PTable", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", " ", 
           RowBox[{
            RowBox[{"k1off", " ", 
             RowBox[{"Kf", "[", 
              RowBox[{"1", ",", "F", ",", "f1"}], "]"}], "*", 
             RowBox[{"Q1Table", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "*", 
             RowBox[{"Theta", "[", 
              RowBox[{"i", ",", " ", "2"}], "]"}]}], "+", 
            RowBox[{"k2off", "  ", 
             RowBox[{"Kf", "[", 
              RowBox[{"1", ",", "F", ",", "f2"}], "]"}], "*", 
             RowBox[{"Q1Table", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"Theta", "[", 
              RowBox[{"N0", ",", " ", "i"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"check", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<P Table=\>\"", ",", " ", "PTable"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"check", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<prob. table=\>\"", ",", " ", "PTable"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<binomal tab=\>\"", ",", " ", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"Binomial", "[", 
                 RowBox[{"N0", ",", " ", "i"}], "]"}], 
                RowBox[{"k1off", "^", "i"}], " ", 
                RowBox[{
                 RowBox[{"k2off", "^", 
                  RowBox[{"(", 
                   RowBox[{"N0", "-", "i"}], ")"}]}], "/", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"k1off", "+", "k2off"}], ")"}], "^", "N0"}]}]}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "N0"}], "}"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<no-rebind mean=\>\"", ",", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"k1off", " ", 
               RowBox[{
                RowBox[{"Kf", "[", 
                 RowBox[{"i", ",", " ", "F", ",", " ", "f1"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"k2off", " ", 
                   RowBox[{"Kf", "[", 
                    RowBox[{"i", ",", " ", "F", ",", " ", "f2"}], "]"}]}], 
                  "+", 
                  RowBox[{"k1off", " ", 
                   RowBox[{"Kf", "[", 
                    RowBox[{"i", ",", " ", "F", ",", " ", "f1"}], "]"}]}]}], 
                 ")"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", " ", "N0"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<, calculated mean=\>\"", ",", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "*", 
               RowBox[{"PTable", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", " ", 
                RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}]}], " ", "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<no-rebind std=\>\"", ",", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"k1off", " ", 
                RowBox[{"Kf", "[", 
                 RowBox[{"i", ",", " ", "F", ",", " ", "f1"}], "]"}], " ", 
                "k2off", " ", 
                RowBox[{
                 RowBox[{"Kf", "[", 
                  RowBox[{"i", ",", " ", "F", ",", " ", "f2"}], "]"}], "/", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"k2off", " ", 
                    RowBox[{"Kf", "[", 
                    RowBox[{"i", ",", " ", "F", ",", " ", "f2"}], "]"}]}], 
                    "+", 
                    RowBox[{"k1off", " ", 
                    RowBox[{"Kf", "[", 
                    RowBox[{"i", ",", " ", "F", ",", " ", "f1"}], "]"}]}]}], 
                   ")"}], "^", "2"}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", " ", "N0"}], "}"}]}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", "\"\<, calculated std=\>\"", 
            ",", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "^", "2"}], "*", 
                 RowBox[{"PTable", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", " ", 
                  RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}], "-", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "*", 
                  RowBox[{"PTable", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", " ", 
                   RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}], "^", "2"}]}], 
             "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"calculate", " ", "the", " ", "mean"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", 
       RowBox[{"nMean", ",", " ", "nStd"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nMean", " ", "=", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "*", 
          RowBox[{"PTable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nStd", " ", "=", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "^", "2"}], "*", 
            RowBox[{"PTable", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}], "-", 
         RowBox[{"nMean", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"return", " ", "the", " ", "mean", " ", "and", " ", "std"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{"nMean", ",", " ", "nStd"}], "}"}], "*)"}], 
      "\[IndentingNewLine]", "PTable"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8699622364534693`*^9, 3.869962329887466*^9}, {
  3.869962363982579*^9, 3.869962391547729*^9}, {3.869962476891561*^9, 
  3.869962530564301*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[18]:=",ExpressionUUID->"1701e115-c27f-449b-920f-68b1ec37a889"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"N0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dis", " ", "=", " ", 
  RowBox[{"solverN", "[", 
   RowBox[{
    RowBox[{"1", "*", 
     RowBox[{"Exp", "[", "0.01", "]"}]}], ",", " ", "10", ",", " ", "1.0"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.869962584126355*^9, 3.869962598685964*^9}, {
  3.869964432531493*^9, 3.8699644756193047`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ba13c761-5895-448b-a7f2-9361621476bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0.005007372135673687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0.03543677948476648`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.11214580400123926`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0.20884819936443477`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.2532433776396715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.20870051210034346`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0.11822626434481232`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0.04538300430471319`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0.01127314518434374`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0.0016315014135374751`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.00010404002646441927`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.86996258504889*^9, 3.869962599443471*^9}, {
  3.86996444329601*^9, 3.869964477579311*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"6110583d-433c-46fd-9059-1ad81a692da3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Calculate the mean antigen level", "Subsection",
 CellChangeTimes->{{3.8699608028155746`*^9, 3.869960810734703*^9}, {
  3.869961452498208*^9, 3.869961453017762*^9}, {3.869961735680396*^9, 
  3.869961735800161*^9}},ExpressionUUID->"b6b51e41-e082-48af-9a71-\
dc8b20588b8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"N0", "=", "3"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "a", " ", "small", " ", "number", " ", "for", " ", "testing"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Clear", "[", "findNMean", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findNMean", "[", 
   RowBox[{"k2off_", ",", " ", "F_", ",", " ", "kon_", ",", " ", 
    RowBox[{"check_", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"constant", " ", "parameter"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"threshold", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "4"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"k1off", "=", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"f1", "=", 
       RowBox[{"4012", "/", "1500"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"f2", "=", 
       RowBox[{"4012", "/", "2000"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"rm", ",", " ", "sm", ",", " ", "gm"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rm", "[", "m_", "]"}], ":=", 
      RowBox[{"m", " ", "k1off", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"F", " ", "/", 
         RowBox[{"(", 
          RowBox[{"m", " ", "f1"}], ")"}]}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"APC", "-", 
       RowBox[{"Ag", " ", "off", " ", "propensity"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sm", "[", "m_", "]"}], ":=", 
      RowBox[{"m", " ", "k2off", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"F", "/", 
         RowBox[{"(", 
          RowBox[{"m", " ", "f2"}], ")"}]}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"BCR", "-", 
       RowBox[{"Ag", " ", "off", " ", "propensity"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gm", "[", "m_", "]"}], ":=", 
      RowBox[{"kon", " ", 
       RowBox[{"(", 
        RowBox[{"N0", "-", "m"}], ")"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"on", " ", "propensity"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"calculate", " ", "Rm0"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", "fmTable", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fmTable", " ", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "N0"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fmTable", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"rm", "[", "1", "]"}], "+", 
         RowBox[{"sm", "[", "1", "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fmTable", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"kon", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"N0", "-", "1"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rm", "[", "1", "]"}], "+", 
             RowBox[{"sm", "[", "1", "]"}]}], ")"}]}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"rm", "[", "2", "]"}], "+", 
         RowBox[{"sm", "[", "2", "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "3"}], ",", 
       RowBox[{"i", "<=", "N0"}], ",", " ", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fmTable", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"rm", "[", 
               RowBox[{"i", "-", "1"}], "]"}], "+", 
              RowBox[{"sm", "[", 
               RowBox[{"i", "-", "1"}], "]"}], "+", 
              RowBox[{"gm", "[", 
               RowBox[{"i", "-", "1"}], "]"}]}], ")"}], 
            RowBox[{"fmTable", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"gm", "[", 
             RowBox[{"i", "-", "2"}], "]"}], 
            RowBox[{"fmTable", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "2"}], "]"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rm", "[", "i", "]"}], "+", 
           RowBox[{"sm", "[", "i", "]"}]}], ")"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"calculate", " ", "Rm1"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "The", " ", "linear", " ", "equations", " ", "about", " ", "Rm1", " ", 
       "is", " ", "a", " ", "tridiagonal", " ", "system"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "I", " ", "borrowed", " ", "the", " ", "method", " ", "from", " ", 
         "stack"}], "-", 
        RowBox[{"overflow", ":", " ", "https", ":"}]}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
           "questions"}], "/", "20921"}], "/", "solving"}], "-", "a", "-", 
        "tridiagonal", "-", "system", "-", "of", "-", "linear", "-", 
        "equations", "-", "using", "-", "the", "-", "thomas", "-", 
        "algorithm"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "amTable", ",", " ", "bmTable", ",", "cmTable", ",", " ", "dmTable"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"amTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gm", "[", "m1", "]"}], 
         RowBox[{"Theta", "[", 
          RowBox[{
           RowBox[{"m1", "-", "1"}], ",", " ", "1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bmTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rm", "[", "m1", "]"}], "+", 
           RowBox[{"sm", "[", "m1", "]"}], "+", 
           RowBox[{"gm", "[", "m1", "]"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cmTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rm", "[", 
            RowBox[{"m1", "+", "1"}], "]"}], "+", 
           RowBox[{"sm", "[", 
            RowBox[{"m1", "+", "1"}], "]"}]}], ")"}], 
         RowBox[{"Theta", "[", 
          RowBox[{
           RowBox[{"N0", "-", "1"}], ",", " ", 
           RowBox[{"m1", "+", "1"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dmTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"rm", "[", 
           RowBox[{"i", "+", "1"}], "]"}]}], 
         RowBox[{"fmTable", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"cPrime", ",", " ", "dPrime", ",", " ", "xOut"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cPrime", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"ax_", ",", "bx_", ",", "cx_"}], "}"}]}], "]"}], ":=", 
      RowBox[{"cx", "/", 
       RowBox[{"(", 
        RowBox[{"bx", "-", 
         RowBox[{"x", " ", "ax"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dPrime", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"ax_", ",", "bx_", ",", "cpx_", ",", "dx_"}], "}"}]}], "]"}],
       ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dx", "-", 
         RowBox[{"x", " ", "ax"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"bx", "-", 
         RowBox[{"cpx", " ", "ax"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"xOut", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"cpx_", ",", "dpx_"}], "}"}]}], "]"}], ":=", 
      RowBox[{"dpx", "-", 
       RowBox[{"x", " ", "cpx"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"cp", ",", " ", "dp", ",", " ", "out", ",", " ", "triThomas"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cp", "=", 
      RowBox[{"Rest", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"cPrime", ",", 
         RowBox[{
          RowBox[{"cmTable", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"bmTable", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"amTable", ",", "bmTable", ",", "cmTable"}], "}"}], 
          "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dp", "=", 
      RowBox[{"Rest", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"dPrime", ",", 
         RowBox[{
          RowBox[{"dmTable", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"bmTable", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"amTable", ",", "bmTable", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Drop", "[", 
                RowBox[{"cp", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], "}"}], "]"}], ",", 
            "dmTable"}], "}"}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"xOut", ",", 
         RowBox[{"dp", "[", 
          RowBox[{"[", 
           RowBox[{"N0", "-", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rest", "[", 
             RowBox[{"Reverse", "[", "cp", "]"}], "]"}], ",", 
            RowBox[{"Rest", "[", 
             RowBox[{"Reverse", "[", "dp", "]"}], "]"}]}], "}"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"triThomas", "[", 
       RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cp", ",", "dp"}], "}"}], ",", 
        RowBox[{
         RowBox[{"cp", "=", 
          RowBox[{"Rest", "[", 
           RowBox[{"FoldList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"#1", " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], "&"}], ",", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", 
              RowBox[{"b", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dp", "=", 
          RowBox[{"Rest", "[", 
           RowBox[{"FoldList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "-", 
                 RowBox[{"#1", " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], "&"}], ",", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", 
              RowBox[{"b", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"Drop", "[", 
                    RowBox[{"cp", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], "]"}], ",", "d"}], 
               "}"}], "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Reverse", "[", 
          RowBox[{"FoldList", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"#1", " ", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "&"}], ",", 
            RowBox[{"dp", "[", 
             RowBox[{"[", 
              RowBox[{"N0", "-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Rest", "[", 
                RowBox[{"Reverse", "[", "cp", "]"}], "]"}], ",", 
               RowBox[{"Rest", "[", 
                RowBox[{"Reverse", "[", "dp", "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", "GmTable", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"GmTable", "=", 
      RowBox[{"triThomas", "[", 
       RowBox[{"amTable", ",", "bmTable", ",", "cmTable", ",", "dmTable"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Some", " ", "basic", " ", "checks"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"check", ",", " ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<If no-rebind, nmean=\>\"", ",", 
         RowBox[{"N", "[", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rm", "[", "i", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rm", "[", "i", "]"}], "+", 
               RowBox[{"sm", "[", "i", "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", " ", "N0"}], "}"}]}], "]"}], "]"}]}],
         " ", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"check", ",", 
       RowBox[{"{", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ndis", "=", 
          RowBox[{"solverN", "[", 
           RowBox[{"k2off", ",", " ", "F", ",", " ", "kon"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<expected exact nmean=\>\"", ",", " ", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"ndis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "1", ",", " ", 
                 RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}], "]"}], "]"}], 
           ",", " ", "5"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ret", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rm", "[", "1", "]"}], "+", 
          RowBox[{"sm", "[", "1", "]"}]}], ")"}], 
        RowBox[{"GmTable", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"rm", "[", "1", "]"}], 
        RowBox[{"fmTable", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "rm", ",", " ", "sm", ",", " ", "GmTable", ",", " ", "fmTable", ",", 
       " ", "gm", ",", " ", "amTable", ",", " ", "bmTable", ",", "cmTable", 
       ",", " ", "dmTable", ",", "cp", ",", " ", "dp", ",", " ", "out", ",", 
       " ", "triThomas"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"check", ",", " ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<calculated mean=\>\"", ",", " ", 
         RowBox[{"NumberForm", "[", 
          RowBox[{"ret", ",", " ", "6"}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ret"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"findNMean", "[", 
     RowBox[{"0.1", ",", "20", ",", " ", "10", ",", " ", "True"}], "]"}], ",",
     "9"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.783807861450006*^9, 3.7838082806034327`*^9}, {
   3.783808356821248*^9, 3.783808430641899*^9}, {3.783808470425519*^9, 
   3.783808470652671*^9}, {3.783808501180105*^9, 3.783808552502307*^9}, {
   3.783808600321781*^9, 3.7838086432272997`*^9}, {3.7838086792964773`*^9, 
   3.783808687512793*^9}, {3.783808767366045*^9, 3.783808804580434*^9}, {
   3.783808841150579*^9, 3.783808857012804*^9}, {3.783808890457777*^9, 
   3.783808905157008*^9}, {3.783808972464377*^9, 3.783808972648259*^9}, {
   3.783809008142877*^9, 3.783809048010665*^9}, 3.783809178515255*^9, 
   3.783809221170789*^9, {3.783809252882403*^9, 3.783809287141192*^9}, {
   3.783820553397623*^9, 3.783820608487146*^9}, {3.7838209811563168`*^9, 
   3.783820989603342*^9}, {3.783821063179523*^9, 3.7838210902414513`*^9}, 
   3.819339621735128*^9, {3.8220134667339*^9, 3.822013467332828*^9}, {
   3.822014829466178*^9, 3.822014841890836*^9}, 3.8220152141747627`*^9, 
   3.822017989392268*^9, 3.822018958214698*^9, 3.822020230867646*^9, {
   3.8220202657768803`*^9, 3.82202026601615*^9}, 3.822021041928933*^9, {
   3.822147483820393*^9, 3.822147512648407*^9}, {3.8221477483062677`*^9, 
   3.822147764769504*^9}, {3.8221478045395193`*^9, 3.82214794461677*^9}, {
   3.822147977289027*^9, 3.822148030988406*^9}, {3.822177450796336*^9, 
   3.822177489143421*^9}, {3.823128240165745*^9, 3.823128264432469*^9}, {
   3.8231283879384537`*^9, 3.823128428366755*^9}, {3.8235309651468153`*^9, 
   3.823530966471727*^9}, {3.823564501541389*^9, 3.8235645050406103`*^9}, 
   3.824304986288492*^9, {3.8246717636454983`*^9, 3.824671770105653*^9}, 
   3.824671825456225*^9, {3.824677181184911*^9, 3.824677181289103*^9}, {
   3.869960822592257*^9, 3.869960843576461*^9}, {3.869960921693074*^9, 
   3.8699610424545803`*^9}, {3.869962769916774*^9, 3.869962778468758*^9}, 
   3.86996289708221*^9, {3.869963043389683*^9, 3.8699630594668818`*^9}, {
   3.869964194782476*^9, 3.86996421575629*^9}, {3.869964314562664*^9, 
   3.869964388572625*^9}, {3.869964905545018*^9, 3.869965110867474*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[122]:=",ExpressionUUID->"f0bdeb78-ef44-48be-b32a-dc23bf919caa"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If no-rebind, nmean=\"\>", "\[InvisibleSpace]", 
   "8.10254013969525`"}],
  SequenceForm["If no-rebind, nmean=", 8.10254013969525],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.869962943783195*^9, 3.8699643909772053`*^9, 3.869964933277355*^9, 
   3.869964976091914*^9, {3.869965024856936*^9, 3.869965111304472*^9}},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"3574e4e7-db60-4e68-970e-a128e1ffebe4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"expected exact nmean=\"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"8.05284\"\>",
      ShowStringCharacters->False],
     8.052844047154183,
     AutoDelete->True],
    NumberForm], "\[InvisibleSpace]", "5"}],
  SequenceForm["expected exact nmean=", 
   NumberForm[8.052844047154183], 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.869962943783195*^9, 3.8699643909772053`*^9, 3.869964933277355*^9, 
   3.869964976091914*^9, {3.869965024856936*^9, 3.869965112403061*^9}},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"408f260e-05c4-41f1-bda8-a68da54a7432"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"calculated mean=\"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"8.05284\"\>",
      ShowStringCharacters->False],
     8.052844047154158,
     AutoDelete->True],
    NumberForm[#, 6]& ]}],
  SequenceForm["calculated mean=", 
   NumberForm[8.052844047154158, 6]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.869962943783195*^9, 3.8699643909772053`*^9, 3.869964933277355*^9, 
   3.869964976091914*^9, {3.869965024856936*^9, 3.869965112404373*^9}},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"21d1d253-4d01-42d8-90d4-8a9c4a0d2859"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. Calculate the variance ", "Subsection",
 CellChangeTimes->{{3.8699614575204372`*^9, 3.8699614688771067`*^9}, {
  3.8699617402679167`*^9, 
  3.86996174045935*^9}},ExpressionUUID->"3ad48065-d12e-40d4-8327-\
ce5b1b767f23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"N0", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "findNStd", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findNStd", "[", 
   RowBox[{"k2off_", ",", " ", "F_", ",", " ", "kon_", ",", " ", 
    RowBox[{"check_", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"threshold", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "4"}], ")"}]}]}], ",", 
      RowBox[{"k1off", "=", "1"}], ",", 
      RowBox[{"f1", "=", 
       RowBox[{"4012", "/", "1500"}]}], ",", 
      RowBox[{"f2", "=", 
       RowBox[{"4012", "/", "2000"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"delta", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Delta", "[", 
       RowBox[{"m_", ",", " ", "n_"}], "]"}], ":=", 
      RowBox[{"DiscreteDelta", "[", 
       RowBox[{"m", "-", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"theta", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Theta", "[", 
       RowBox[{"m_", ",", " ", 
        RowBox[{"m0_", ":", "0"}]}], "]"}], ":=", 
      RowBox[{"UnitStep", "[", 
       RowBox[{"m", "-", "m0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"rm", ",", " ", "sm", ",", " ", "gm"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rm", "[", "m_", "]"}], ":=", 
      RowBox[{"m", " ", "k1off", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"F", " ", "/", 
         RowBox[{"(", 
          RowBox[{"m", " ", "f1"}], ")"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sm", "[", "m_", "]"}], ":=", 
      RowBox[{"m", " ", "k2off", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"F", "/", 
         RowBox[{"(", 
          RowBox[{"m", " ", "f2"}], ")"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gm", "[", "m_", "]"}], ":=", 
      RowBox[{"kon", " ", 
       RowBox[{"(", 
        RowBox[{"N0", "-", "m"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"calculate", " ", "Rm0"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", "fmTable", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fmTable", " ", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "N0"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fmTable", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"rm", "[", "1", "]"}], "+", 
         RowBox[{"sm", "[", "1", "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fmTable", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"kon", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"N0", "-", "1"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rm", "[", "1", "]"}], "+", 
             RowBox[{"sm", "[", "1", "]"}]}], ")"}]}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"rm", "[", "2", "]"}], "+", 
         RowBox[{"sm", "[", "2", "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "3"}], ",", 
       RowBox[{"i", "<=", "N0"}], ",", " ", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fmTable", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"rm", "[", 
               RowBox[{"i", "-", "1"}], "]"}], "+", 
              RowBox[{"sm", "[", 
               RowBox[{"i", "-", "1"}], "]"}], "+", 
              RowBox[{"gm", "[", 
               RowBox[{"i", "-", "1"}], "]"}]}], ")"}], 
            RowBox[{"fmTable", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"gm", "[", 
             RowBox[{"i", "-", "2"}], "]"}], 
            RowBox[{"fmTable", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "2"}], "]"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rm", "[", "i", "]"}], "+", 
           RowBox[{"sm", "[", "i", "]"}]}], ")"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"calculate", " ", "Rm1"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "amTable", ",", " ", "bmTable", ",", "cmTable", ",", " ", "dmTable"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"amTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gm", "[", "m1", "]"}], 
         RowBox[{"Theta", "[", 
          RowBox[{
           RowBox[{"m1", "-", "1"}], ",", " ", "1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bmTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rm", "[", "m1", "]"}], "+", 
           RowBox[{"sm", "[", "m1", "]"}], "+", 
           RowBox[{"gm", "[", "m1", "]"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cmTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rm", "[", 
            RowBox[{"m1", "+", "1"}], "]"}], "+", 
           RowBox[{"sm", "[", 
            RowBox[{"m1", "+", "1"}], "]"}]}], ")"}], 
         RowBox[{"Theta", "[", 
          RowBox[{
           RowBox[{"N0", "-", "1"}], ",", " ", 
           RowBox[{"m1", "+", "1"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dmTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"rm", "[", 
           RowBox[{"i", "+", "1"}], "]"}]}], 
         RowBox[{"fmTable", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"cPrime", ",", " ", "dPrime", ",", " ", "xOut"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cPrime", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"ax_", ",", "bx_", ",", "cx_"}], "}"}]}], "]"}], ":=", 
      RowBox[{"cx", "/", 
       RowBox[{"(", 
        RowBox[{"bx", "-", 
         RowBox[{"x", " ", "ax"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dPrime", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"ax_", ",", "bx_", ",", "cpx_", ",", "dx_"}], "}"}]}], "]"}],
       ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dx", "-", 
         RowBox[{"x", " ", "ax"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"bx", "-", 
         RowBox[{"cpx", " ", "ax"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"xOut", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"cpx_", ",", "dpx_"}], "}"}]}], "]"}], ":=", 
      RowBox[{"dpx", "-", 
       RowBox[{"x", " ", "cpx"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"cp", ",", " ", "dp", ",", " ", "out", ",", " ", "triThomas"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cp", "=", 
      RowBox[{"Rest", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"cPrime", ",", 
         RowBox[{
          RowBox[{"cmTable", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"bmTable", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"amTable", ",", "bmTable", ",", "cmTable"}], "}"}], 
          "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dp", "=", 
      RowBox[{"Rest", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"dPrime", ",", 
         RowBox[{
          RowBox[{"dmTable", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"bmTable", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"amTable", ",", "bmTable", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Drop", "[", 
                RowBox[{"cp", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], "}"}], "]"}], ",", 
            "dmTable"}], "}"}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"xOut", ",", 
         RowBox[{"dp", "[", 
          RowBox[{"[", 
           RowBox[{"N0", "-", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rest", "[", 
             RowBox[{"Reverse", "[", "cp", "]"}], "]"}], ",", 
            RowBox[{"Rest", "[", 
             RowBox[{"Reverse", "[", "dp", "]"}], "]"}]}], "}"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"triThomas", "[", 
       RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cp", ",", "dp"}], "}"}], ",", 
        RowBox[{
         RowBox[{"cp", "=", 
          RowBox[{"Rest", "[", 
           RowBox[{"FoldList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"#1", " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], "&"}], ",", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", 
              RowBox[{"b", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dp", "=", 
          RowBox[{"Rest", "[", 
           RowBox[{"FoldList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "-", 
                 RowBox[{"#1", " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], "&"}], ",", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", 
              RowBox[{"b", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"Drop", "[", 
                    RowBox[{"cp", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], "]"}], ",", "d"}], 
               "}"}], "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Reverse", "[", 
          RowBox[{"FoldList", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"#1", " ", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "&"}], ",", 
            RowBox[{"dp", "[", 
             RowBox[{"[", 
              RowBox[{"N0", "-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Rest", "[", 
                RowBox[{"Reverse", "[", "cp", "]"}], "]"}], ",", 
               RowBox[{"Rest", "[", 
                RowBox[{"Reverse", "[", "dp", "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", "GmTable", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"GmTable", "=", 
      RowBox[{"triThomas", "[", 
       RowBox[{"amTable", ",", "bmTable", ",", "cmTable", ",", "dmTable"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"check", ",", " ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<If no-rebind, nmean=\>\"", ",", 
         RowBox[{"N", "[", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rm", "[", "i", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rm", "[", "i", "]"}], "+", 
               RowBox[{"sm", "[", "i", "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", " ", "N0"}], "}"}]}], "]"}], "]"}]}],
         " ", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "amTable", ",", " ", "bmTable", ",", "cmTable", ",", " ", "dmTable", 
       ",", "cp", ",", " ", "dp", ",", " ", "out", ",", " ", "triThomas"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Calculate", " ", "Rm2"}], ",", " ", 
       RowBox[{"denoted", " ", "as", " ", "hm", " ", "here"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Use", " ", "the", " ", "same", " ", "method", " ", "as", " ", 
       "above"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "amTable2", ",", " ", "bmTable2", ",", "cmTable2", ",", " ", 
       "dmTable2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"amTable2", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gm", "[", 
          RowBox[{"m1", "+", "1"}], "]"}], 
         RowBox[{"Theta", "[", 
          RowBox[{
           RowBox[{"m1", "-", "1"}], ",", " ", "1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bmTable2", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rm", "[", "m1", "]"}], "+", 
           RowBox[{"sm", "[", "m1", "]"}], "+", 
           RowBox[{"gm", "[", "m1", "]"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cmTable2", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rm", "[", 
            RowBox[{"m1", "+", "1"}], "]"}], "+", 
           RowBox[{"sm", "[", 
            RowBox[{"m1", "+", "1"}], "]"}]}], ")"}], 
         RowBox[{"Theta", "[", 
          RowBox[{
           RowBox[{"N0", "-", "1"}], ",", " ", 
           RowBox[{"m1", "+", "1"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", " ", "1", ",", " ", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dmTable2", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"rm", "[", 
           RowBox[{"i", "+", "1"}], "]"}], 
          RowBox[{"GmTable", "[", 
           RowBox[{"[", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", " ", 
              RowBox[{"N0", "-", "1"}]}], "]"}], "]"}], "]"}], 
          RowBox[{"Theta", "[", 
           RowBox[{
            RowBox[{"N0", "-", "1"}], ",", " ", 
            RowBox[{"i", "+", "1"}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"rm", "[", 
           RowBox[{"i", "+", "1"}], "]"}], 
          RowBox[{"fmTable", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "-", 
         RowBox[{"kon", " ", 
          RowBox[{"GmTable", "[", 
           RowBox[{"[", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", " ", "1"}], "]"}], "]"}], "]"}], 
          RowBox[{"Theta", "[", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", " ", "1"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"N0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"cPrime2", ",", " ", "dPrime2", ",", " ", "xOut2"}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cPrime2", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"ax_", ",", "bx_", ",", "cx_"}], "}"}]}], "]"}], ":=", 
      RowBox[{"cx", "/", 
       RowBox[{"(", 
        RowBox[{"bx", "-", 
         RowBox[{"x", " ", "ax"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dPrime2", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"ax_", ",", "bx_", ",", "cpx_", ",", "dx_"}], "}"}]}], "]"}],
       ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dx", "-", 
         RowBox[{"x", " ", "ax"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"bx", "-", 
         RowBox[{"cpx", " ", "ax"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"xOut2", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"{", 
         RowBox[{"cpx_", ",", "dpx_"}], "}"}]}], "]"}], ":=", 
      RowBox[{"dpx", "-", 
       RowBox[{"x", " ", "cpx"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "cp2", ",", " ", "dp2", ",", " ", "out2", ",", " ", "triThomas2"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cp2", "=", 
      RowBox[{"Rest", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"cPrime2", ",", 
         RowBox[{
          RowBox[{"cmTable2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"bmTable2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"amTable2", ",", "bmTable2", ",", "cmTable2"}], "}"}], 
          "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dp2", "=", 
      RowBox[{"Rest", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"dPrime2", ",", 
         RowBox[{
          RowBox[{"dmTable2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"bmTable2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"amTable2", ",", "bmTable2", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Drop", "[", 
                RowBox[{"cp2", ",", 
                 RowBox[{"-", "1"}]}], "]"}]}], "}"}], "]"}], ",", 
            "dmTable2"}], "}"}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out2", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"FoldList", "[", 
        RowBox[{"xOut2", ",", 
         RowBox[{"dp2", "[", 
          RowBox[{"[", 
           RowBox[{"N0", "-", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rest", "[", 
             RowBox[{"Reverse", "[", "cp2", "]"}], "]"}], ",", 
            RowBox[{"Rest", "[", 
             RowBox[{"Reverse", "[", "dp2", "]"}], "]"}]}], "}"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"triThomas2", "[", 
       RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cp", ",", "dp"}], "}"}], ",", 
        RowBox[{
         RowBox[{"cp", "=", 
          RowBox[{"Rest", "[", 
           RowBox[{"FoldList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"#1", " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], "&"}], ",", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", 
              RowBox[{"b", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"dp", "=", 
          RowBox[{"Rest", "[", 
           RowBox[{"FoldList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "-", 
                 RowBox[{"#1", " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], " ", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], "&"}], ",", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", 
              RowBox[{"b", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"Drop", "[", 
                    RowBox[{"cp", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "}"}], "]"}], ",", "d"}], 
               "}"}], "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Reverse", "[", 
          RowBox[{"FoldList", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"#1", " ", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "&"}], ",", 
            RowBox[{"dp", "[", 
             RowBox[{"[", 
              RowBox[{"N0", "-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Rest", "[", 
                RowBox[{"Reverse", "[", "cp", "]"}], "]"}], ",", 
               RowBox[{"Rest", "[", 
                RowBox[{"Reverse", "[", "dp", "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"HmTable", "=", 
      RowBox[{"triThomas2", "[", 
       RowBox[{
       "amTable2", ",", "bmTable2", ",", "cmTable2", ",", "dmTable2"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"nmean", ",", " ", "nstd", ",", " ", "n2mean"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nmean", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rm", "[", "1", "]"}], "+", 
          RowBox[{"sm", "[", "1", "]"}]}], ")"}], 
        RowBox[{"GmTable", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"rm", "[", "1", "]"}], 
        RowBox[{"fmTable", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n2mean", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rm", "[", "1", "]"}], "+", 
          RowBox[{"sm", "[", "1", "]"}]}], ")"}], 
        RowBox[{"HmTable", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "+", 
       RowBox[{"2", 
        RowBox[{"rm", "[", "1", "]"}], 
        RowBox[{"GmTable", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"rm", "[", "1", "]"}], 
        RowBox[{"fmTable", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nstd", " ", "=", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"n2mean", "-", 
        RowBox[{"nmean", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"check", ",", " ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<If no-rebind, nstd=\>\"", ",", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"rm", "[", "i", "]"}], " ", 
              RowBox[{
               RowBox[{"sm", "[", "i", "]"}], "/", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"rm", "[", "i", "]"}], "+", 
                  RowBox[{"sm", "[", "i", "]"}]}], ")"}], "^", "2"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", " ", "N0"}], "}"}]}], "]"}], "]"}], 
          " ", "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"check", ",", 
       RowBox[{"{", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ndis", "=", 
          RowBox[{"solverN", "[", 
           RowBox[{"k2off", ",", " ", "F", ",", " ", "kon"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<expected exact nmean=\>\"", ",", " ", 
           RowBox[{"N", "[", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "*", 
               RowBox[{
                RowBox[{"ndis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "1", ",", " ", 
                RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"check", ",", 
       RowBox[{"{", " ", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"ndis", "=", 
           RowBox[{"solverN", "[", 
            RowBox[{"k2off", ",", " ", "F", ",", " ", "kon"}], "]"}]}], ";"}],
          "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<expected exact nstd=\>\"", ",", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "^", "2"}], "*", 
                RowBox[{
                 RowBox[{"ndis", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "1", ",", " ", 
                 RowBox[{"N0", "+", "1"}]}], "}"}]}], "]"}], "]"}], "-", 
            RowBox[{"nmean", "^", "2"}]}], "]"}]}], "]"}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"check", ",", " ", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<calculated nmean = \>\"", ",", " ", "nmean", ",", " ", 
         "\"\<,\\ncalculated nstd=\>\"", ",", " ", "nstd"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "rm", ",", " ", "sm", ",", " ", "GmTable", ",", " ", "fmTable", ",", 
       " ", "gm", ",", " ", "amTable", ",", " ", "bmTable", ",", "cmTable", 
       ",", " ", "dmTable", ",", "cp", ",", " ", "dp", ",", " ", "out", ",", 
       " ", "triThomas", ",", "cPrime", ",", " ", "dPrime", ",", " ", 
       "xOut"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", " ", 
      RowBox[{
      "amTable2", ",", " ", "bmTable2", ",", "cmTable2", ",", " ", "dmTable2",
        ",", "cp2", ",", " ", "dp2", ",", " ", "out2", ",", " ", "triThomas2",
        ",", "cPrime2", ",", " ", "dPrime2", ",", " ", "xOut2"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"nmean", ",", " ", "n2mean"}], "]"}], ";", 
     "\[IndentingNewLine]", "nstd"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"findNStd", "[", 
     RowBox[{"0.1", ",", " ", "100", ",", " ", "200", ",", "True"}], "]"}], 
    ",", "5"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.783807861450006*^9, 3.7838082806034327`*^9}, {
   3.783808356821248*^9, 3.783808430641899*^9}, {3.783808470425519*^9, 
   3.783808470652671*^9}, {3.783808501180105*^9, 3.783808552502307*^9}, {
   3.783808600321781*^9, 3.7838086432272997`*^9}, {3.7838086792964773`*^9, 
   3.783808687512793*^9}, {3.783808767366045*^9, 3.783808804580434*^9}, {
   3.783808841150579*^9, 3.783808857012804*^9}, {3.783808890457777*^9, 
   3.783808905157008*^9}, {3.783808972464377*^9, 3.783808972648259*^9}, {
   3.783809008142877*^9, 3.783809048010665*^9}, 3.783809178515255*^9, 
   3.783809221170789*^9, {3.783809252882403*^9, 3.783809287141192*^9}, {
   3.783820553397623*^9, 3.783820608487146*^9}, {3.7838209811563168`*^9, 
   3.783820989603342*^9}, {3.783821063179523*^9, 3.7838210902414513`*^9}, {
   3.79623724704095*^9, 3.7962372614977627`*^9}, {3.796237297684944*^9, 
   3.796237351981251*^9}, {3.79623743069103*^9, 3.796237450456994*^9}, {
   3.796237486486507*^9, 3.796237486863076*^9}, {3.796237522168284*^9, 
   3.796237561058132*^9}, {3.7962384904166183`*^9, 3.7962385155259113`*^9}, {
   3.796238568028433*^9, 3.796238592764288*^9}, {3.7962386457571793`*^9, 
   3.79623881241746*^9}, {3.796238868800434*^9, 3.796238869287178*^9}, {
   3.796238899367017*^9, 3.796239036500495*^9}, {3.796239163732184*^9, 
   3.796239207674494*^9}, {3.796239262397212*^9, 3.796239360150404*^9}, 
   3.81933960066507*^9, {3.8193399973007917`*^9, 3.8193399979420547`*^9}, {
   3.819340546397781*^9, 3.819340550173534*^9}, {3.819340613630589*^9, 
   3.819340686878488*^9}, {3.819340719360539*^9, 3.819340734820464*^9}, {
   3.8228756710427513`*^9, 3.8228756755451813`*^9}, {3.823128476766385*^9, 
   3.823128627169578*^9}, {3.8231286588242598`*^9, 3.823128716514924*^9}, {
   3.823128763202528*^9, 3.823128763368311*^9}, 3.823128795336944*^9, {
   3.8235650413423*^9, 3.82356505772223*^9}, {3.824305023029768*^9, 
   3.824305023155841*^9}, {3.824305439347063*^9, 3.824305471163457*^9}, {
   3.824671781283985*^9, 3.82467178225308*^9}, 3.824671819174659*^9, 
   3.824677466681926*^9, {3.869964720856596*^9, 3.869964791154991*^9}, {
   3.8699648528460903`*^9, 3.869964887496459*^9}, 3.869965118274569*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[126]:=",ExpressionUUID->"27534735-e584-48e3-8825-994e263e60ec"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If no-rebind, nmean=\"\>", "\[InvisibleSpace]", 
   "4.233330893663395`"}],
  SequenceForm["If no-rebind, nmean=", 4.233330893663395],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.869964773983148*^9, 3.8699648096773987`*^9, {3.86996486599227*^9, 
   3.869964887871176*^9}, 3.8699651187305107`*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"86e040a1-2cdc-4465-97a6-0022ffa56f5f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If no-rebind, nstd=\"\>", "\[InvisibleSpace]", 
   "1.3004121044493822`"}],
  SequenceForm["If no-rebind, nstd=", 1.3004121044493822`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.869964773983148*^9, 3.8699648096773987`*^9, {3.86996486599227*^9, 
   3.869964887871176*^9}, 3.869965118731571*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"2c455bb5-42c2-41f8-baf9-5c818f971329"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"expected exact nmean=\"\>", "\[InvisibleSpace]", 
   "4.208196845083821`"}],
  SequenceForm["expected exact nmean=", 4.208196845083821],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.869964773983148*^9, 3.8699648096773987`*^9, {3.86996486599227*^9, 
   3.869964887871176*^9}, 3.869965119763516*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"febdf826-0dbc-4ee6-bd06-edae22ee25ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"expected exact nstd=\"\>", "\[InvisibleSpace]", 
   "1.3046471330046903`"}],
  SequenceForm["expected exact nstd=", 1.3046471330046903`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.869964773983148*^9, 3.8699648096773987`*^9, {3.86996486599227*^9, 
   3.869964887871176*^9}, 3.8699651197644157`*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"deaf79b7-57e7-430e-96c1-d44fe62a4cca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"calculated nmean = \"\>", "\[InvisibleSpace]", 
   "4.208196845083817`", "\[InvisibleSpace]", "\<\",\\ncalculated nstd=\"\>", 
   "\[InvisibleSpace]", "1.304647133004689`"}],
  SequenceForm[
  "calculated nmean = ", 4.208196845083817, ",\ncalculated nstd=", 
   1.304647133004689],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.869964773983148*^9, 3.8699648096773987`*^9, {3.86996486599227*^9, 
   3.869964887871176*^9}, 3.869965119765128*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"d290c3c2-1a32-42cd-951f-40dd9c64ef7f"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.869964774107793*^9, 
  3.86996477574531*^9}},ExpressionUUID->"a00b53ec-dce9-4bdf-b1d6-\
f527c52fc3b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["6. Calculate the Fisher information", "Subsection",
 CellChangeTimes->{{3.869961492935182*^9, 3.869961500859748*^9}, {
  3.8699617446295013`*^9, 
  3.869961744896646*^9}},ExpressionUUID->"c8d46709-a869-41b1-af80-\
ce77edab2763"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"N0", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "findInfo", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"findInfo", "[", 
    RowBox[{
    "n0_", ",", " ", "k2off_", ",", " ", "F_", ",", " ", "kon_", ",", " ", 
     RowBox[{"check_", ":", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"threshold", "=", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "7"}], ")"}]}]}], ",", 
       RowBox[{"k1off", "=", "1"}], ",", 
       RowBox[{"f1", "=", 
        RowBox[{"4012", "/", "1500"}]}], ",", 
       RowBox[{"f2", "=", 
        RowBox[{"4012", "/", "2000"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"N0", "=", "n0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"check", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<N0=\>\"", ",", " ", "N0"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"kon", "\[Equal]", "0"}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"kon", "<", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Clear", "[", 
          RowBox[{"rm", ",", " ", "sm"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rm", "[", "m_", "]"}], ":=", 
          RowBox[{"m", " ", "k1off", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"F", " ", "/", 
             RowBox[{"(", 
              RowBox[{"m", " ", "f1"}], ")"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sm", "[", "m_", "]"}], ":=", 
          RowBox[{"m", " ", "k2off", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"F", "/", 
             RowBox[{"(", 
              RowBox[{"m", " ", "f2"}], ")"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ret", "=", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"rm", "[", "i", "]"}], " ", 
              RowBox[{
               RowBox[{"sm", "[", "i", "]"}], "/", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"rm", "[", "i", "]"}], "+", 
                  RowBox[{"sm", "[", "i", "]"}]}], ")"}], "^", "2"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", " ", "N0"}], "}"}]}], "]"}], 
           "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Clear", "[", 
           RowBox[{"nmean1", ",", " ", "nstd1", ",", " ", "nmean2"}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"nmean1", "=", 
           RowBox[{"findNMean", "[", 
            RowBox[{
             RowBox[{"k2off", "/", "1.0001"}], ",", " ", "F", ",", "kon", ",",
              " ", "check"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nmean2", " ", "=", " ", 
           RowBox[{"findNMean", "[", 
            RowBox[{
             RowBox[{"k2off", "*", "1.0001"}], ",", " ", "F", ",", " ", "kon",
              ",", " ", "check"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nstd1", " ", "=", " ", 
           RowBox[{"findNStd", "[", 
            RowBox[{
            "k2off", ",", " ", "F", ",", " ", "kon", ",", " ", "check"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"check", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<n1=\>\"", ",", "nmean1", ",", " ", "\"\<, n2=\>\"", ",", 
              " ", "nmean2", ",", "  ", "\"\<, std=\>\"", ",", " ", "nstd1"}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ret", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nmean1", "-", "nmean2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"nstd1", "*", 
              RowBox[{"(", 
               RowBox[{"2", "*", 
                RowBox[{"Log", "[", "1.0001", "]"}]}], ")"}]}], ")"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Clear", "[", 
           RowBox[{"rm", ",", " ", "sm"}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"rm", "[", "m_", "]"}], ":=", 
           RowBox[{"m", " ", "k1off", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{"F", " ", "/", 
              RowBox[{"(", 
               RowBox[{"m", " ", "f1"}], ")"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"sm", "[", "m_", "]"}], ":=", 
           RowBox[{"m", " ", "k2off", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{"F", "/", 
              RowBox[{"(", 
               RowBox[{"m", " ", "f2"}], ")"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"check", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<no-rebind, Info=\>\"", ",", 
              RowBox[{"N", "[", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"rm", "[", "i", "]"}], " ", 
                   RowBox[{
                    RowBox[{"sm", "[", "i", "]"}], "/", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"rm", "[", "i", "]"}], "+", 
                    RowBox[{"sm", "[", "i", "]"}]}], ")"}], "^", "2"}]}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", " ", "N0"}], "}"}]}], "]"}], 
                "]"}], " ", "]"}]}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Clear", "[", 
           RowBox[{
           "nmean1", ",", " ", "nmean2", ",", " ", "nstd1", ",", " ", "rm", 
            ",", " ", "sm"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"check", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Lower-bound of Info=\>\"", ",", " ", 
          RowBox[{"ret", "^", "2"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ret", "^", "2"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findInfo", "[", 
   RowBox[{
   "10", ",", " ", "0.1", ",", " ", "50", ",", " ", "5", ",", " ", "True"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.783807861450006*^9, 3.7838082806034327`*^9}, {
   3.783808356821248*^9, 3.783808430641899*^9}, {3.783808470425519*^9, 
   3.783808470652671*^9}, {3.783808501180105*^9, 3.783808552502307*^9}, {
   3.783808600321781*^9, 3.7838086432272997`*^9}, {3.7838086792964773`*^9, 
   3.783808687512793*^9}, {3.783808767366045*^9, 3.783808804580434*^9}, {
   3.783808841150579*^9, 3.783808857012804*^9}, {3.783808890457777*^9, 
   3.783808905157008*^9}, {3.783808972464377*^9, 3.783808972648259*^9}, {
   3.783809008142877*^9, 3.783809048010665*^9}, 3.783809178515255*^9, 
   3.783809221170789*^9, {3.783809252882403*^9, 3.783809287141192*^9}, {
   3.783820553397623*^9, 3.783820608487146*^9}, {3.7838209811563168`*^9, 
   3.783820989603342*^9}, {3.783821063179523*^9, 3.7838210902414513`*^9}, {
   3.79623724704095*^9, 3.7962372614977627`*^9}, {3.796237297684944*^9, 
   3.796237351981251*^9}, {3.79623743069103*^9, 3.796237450456994*^9}, {
   3.796237486486507*^9, 3.796237486863076*^9}, {3.796237522168284*^9, 
   3.796237561058132*^9}, {3.7962384904166183`*^9, 3.7962385155259113`*^9}, {
   3.796238568028433*^9, 3.796238592764288*^9}, {3.7962386457571793`*^9, 
   3.79623881241746*^9}, {3.796238868800434*^9, 3.796238869287178*^9}, {
   3.796238899367017*^9, 3.796239036500495*^9}, {3.796239163732184*^9, 
   3.796239207674494*^9}, {3.796239262397212*^9, 3.796239360150404*^9}, {
   3.796241514633567*^9, 3.796241518252185*^9}, {3.796241605321639*^9, 
   3.796241857375148*^9}, {3.796241961809757*^9, 3.796241994477083*^9}, {
   3.796242039550954*^9, 3.7962420721298037`*^9}, {3.79624213960019*^9, 
   3.796242150258465*^9}, {3.7962428430186787`*^9, 3.79624287971189*^9}, {
   3.796242913260646*^9, 3.79624295783444*^9}, {3.819339129482506*^9, 
   3.81933913017907*^9}, {3.8193393333245068`*^9, 3.819339338314479*^9}, {
   3.819340030258203*^9, 3.8193400583143578`*^9}, {3.819340097875702*^9, 
   3.819340125322175*^9}, {3.819340176444848*^9, 3.8193402156628647`*^9}, {
   3.819340794569448*^9, 3.819340813863318*^9}, {3.819340886226987*^9, 
   3.8193408869704103`*^9}, {3.8197630015424433`*^9, 3.819763067300366*^9}, {
   3.819763122723565*^9, 3.819763129028*^9}, {3.819763229207094*^9, 
   3.819763229604734*^9}, 3.8231282038282747`*^9, {3.8231288687637873`*^9, 
   3.823128870539956*^9}, {3.824305492255334*^9, 3.824305503294903*^9}, {
   3.869965216907933*^9, 3.869965244338471*^9}, 3.8699652744719687`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[141]:=",ExpressionUUID->"dd7e6675-dfae-4b6d-96c2-709d8b58466b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N0=\"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["N0=", 10],
  Editable->False]], "Print",
 CellChangeTimes->{{3.869965244946205*^9, 3.8699652749009333`*^9}},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"ef30a8f6-9b31-40cd-b203-bd97cd742042"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If no-rebind, nmean=\"\>", "\[InvisibleSpace]", 
   "6.384062379818223`"}],
  SequenceForm["If no-rebind, nmean=", 6.384062379818223],
  Editable->False]], "Print",
 CellChangeTimes->{{3.869965244946205*^9, 3.869965274903468*^9}},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"00475adb-ce01-4441-8494-0c1e4bbe5d07"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"expected exact nmean=\"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"6.37239\"\>",
      ShowStringCharacters->False],
     6.372390427913651,
     AutoDelete->True],
    NumberForm], "\[InvisibleSpace]", "5"}],
  SequenceForm["expected exact nmean=", 
   NumberForm[6.372390427913651], 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965275992618*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"26199e5f-7979-44c8-bcc3-23b7f65bfdc3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"calculated mean=\"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"6.37239\"\>",
      ShowStringCharacters->False],
     6.372390427913652,
     AutoDelete->True],
    NumberForm[#, 6]& ]}],
  SequenceForm["calculated mean=", 
   NumberForm[6.372390427913652, 6]],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.86996527599397*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"a7be7fa4-fdfe-4dab-90d8-bbecf94ae745"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If no-rebind, nmean=\"\>", "\[InvisibleSpace]", 
   "6.383735236396937`"}],
  SequenceForm["If no-rebind, nmean=", 6.383735236396937],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965275995347*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"a216f5fa-e66f-45b7-a9fb-c9e6c4f0d46a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"expected exact nmean=\"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"6.37206\"\>",
      ShowStringCharacters->False],
     6.372062540095211,
     AutoDelete->True],
    NumberForm], "\[InvisibleSpace]", "5"}],
  SequenceForm["expected exact nmean=", 
   NumberForm[6.372062540095211], 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965277007082*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"2d466bfc-9476-40f4-bab9-878e61d7543c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"calculated mean=\"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"6.37206\"\>",
      ShowStringCharacters->False],
     6.372062540095208,
     AutoDelete->True],
    NumberForm[#, 6]& ]}],
  SequenceForm["calculated mean=", 
   NumberForm[6.372062540095208, 6]],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.8699652770083313`*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"c994f47a-d3ad-47fe-9261-730c45bc685a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If no-rebind, nmean=\"\>", "\[InvisibleSpace]", 
   "6.38389881094472`"}],
  SequenceForm["If no-rebind, nmean=", 6.38389881094472],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965277009288*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"bde67ea2-36e3-4dd7-be52-ae09f93745aa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If no-rebind, nstd=\"\>", "\[InvisibleSpace]", 
   "1.2789835382983028`"}],
  SequenceForm["If no-rebind, nstd=", 1.2789835382983028`],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965277010137*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"9b800895-163e-42a5-b16a-3dffdc4778ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"expected exact nmean=\"\>", "\[InvisibleSpace]", 
   "6.372226486818935`"}],
  SequenceForm["expected exact nmean=", 6.372226486818935],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965278011948*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"acba7a34-163b-4f38-8c98-d8583acb2e01"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"expected exact nstd=\"\>", "\[InvisibleSpace]", 
   "1.2819841355378343`"}],
  SequenceForm["expected exact nstd=", 1.2819841355378343`],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965278012958*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"bf2ec642-822b-4165-a690-74d019b907aa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"calculated nmean = \"\>", "\[InvisibleSpace]", 
   "6.372226486818933`", "\[InvisibleSpace]", "\<\",\\ncalculated nstd=\"\>", 
   "\[InvisibleSpace]", "1.2819841355378343`"}],
  SequenceForm[
  "calculated nmean = ", 6.372226486818933, ",\ncalculated nstd=", 
   1.2819841355378343`],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965278013729*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"3a5a8178-52ff-4aa7-b4d0-b4d2c59c56ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n1=\"\>", "\[InvisibleSpace]", "6.372390427913652`", 
   "\[InvisibleSpace]", "\<\", n2=\"\>", "\[InvisibleSpace]", 
   "6.372062540095208`", "\[InvisibleSpace]", "\<\", std=\"\>", 
   "\[InvisibleSpace]", "1.2819841355378343`"}],
  SequenceForm[
  "n1=", 6.372390427913652, ", n2=", 6.372062540095208, ", std=", 
   1.2819841355378343`],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965278014504*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"aa12ec2b-c580-4492-b920-45a597e1cfc8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"no-rebind, Info=\"\>", "\[InvisibleSpace]", 
   "1.2789835382983028`"}],
  SequenceForm["no-rebind, Info=", 1.2789835382983028`],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965278015231*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"b90b8936-65ca-44cd-9568-ea061d1b19a7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lower-bound of Info=\"\>", "\[InvisibleSpace]", 
   "1.6355683544308983`"}],
  SequenceForm["Lower-bound of Info=", 1.6355683544308983`],
  Editable->False]], "Print",
 CellChangeTimes->{3.869965244946205*^9, 3.869965278015921*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"b7e277a4-6a5f-435a-a1ea-7141f2304d69"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7. Generate data", "Subsection",
 CellChangeTimes->{{3.869961612735344*^9, 3.8699616210707407`*^9}, {
  3.869961747632618*^9, 
  3.869961747945369*^9}},ExpressionUUID->"898f00eb-39dd-4c43-9020-\
6f861a285854"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"konTable", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"10", "^", "i"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "6", ",", " ", "0.1"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infoTableNag", "=", " ", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"findInfo", "[", 
      RowBox[{"30", ",", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "ebx"}], "]"}], ",", 
       RowBox[{"10", "*", "30"}], ",", " ", 
       RowBox[{"konTable", "[", 
        RowBox[{"[", "ix", "]"}], "]"}]}], " ", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"ebx", ",", " ", 
       RowBox[{"-", "5"}], ",", "10", ",", "0.2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"ix", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "konTable", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.823132071144293*^9, 3.823132101607108*^9}, {
   3.823132153672783*^9, 3.823132154334168*^9}, {3.823132185696168*^9, 
   3.823132283316687*^9}, {3.823132400761716*^9, 3.823132415410351*^9}, {
   3.823132455174852*^9, 3.823132455627355*^9}, 3.823133014444661*^9, {
   3.8231331679349957`*^9, 3.823133178142426*^9}, 3.8231368265775547`*^9, {
   3.823136993122581*^9, 3.823136999424447*^9}, 3.823137082227559*^9, {
   3.823531184150464*^9, 3.823531189186467*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[145]:=",ExpressionUUID->"81b805c5-f75e-4989-b9a3-8535a3cb3816"]
}, Open  ]],

Cell[CellGroupData[{

Cell["8. Save the data", "Subsection",
 CellChangeTimes->{{3.869961644151739*^9, 3.869961648519031*^9}, {
  3.869961749213125*^9, 
  3.869961749427403*^9}},ExpressionUUID->"1d69da6f-8b59-438d-9f92-\
eb7f97d9e28e"],

Cell[BoxData[
 RowBox[{"Export", "[", " ", 
  RowBox[{"\"\<path_to_file\>\"", ",", "infoTableNag"}], "]"}]], "Input",
 CellChangeTimes->{{3.823132571172779*^9, 3.8231325793951807`*^9}, {
   3.823133071088999*^9, 3.823133072910668*^9}, 3.823136880878572*^9, {
   3.82313717625937*^9, 3.823137176539386*^9}, {3.8235313156488323`*^9, 
   3.823531317038302*^9}, {3.823536646077387*^9, 3.823536646748602*^9}, {
   3.8699616588124228`*^9, 3.8699616674370203`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"00312393-872c-4ac8-8fe7-6faeec20f670"]
}, Open  ]],

Cell[CellGroupData[{

Cell["9. Make the plot", "Subsection",
 CellChangeTimes->{{3.8699653062175713`*^9, 
  3.869965312843498*^9}},ExpressionUUID->"7cc433b7-dc6a-4be6-80f9-\
77a067aed1ee"],

Cell["Calculate the ratio", "Text",
 CellChangeTimes->{{3.8699653900332003`*^9, 
  3.8699653961345787`*^9}},ExpressionUUID->"fd7d8669-e576-486c-87d9-\
86cf300cdad0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "calculate", " ", "Fisher", " ", "info", " ", 
    "without", " ", "rebinding"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xb1", "=", "1.5"}], ";", 
    RowBox[{"xb2", "=", "2.0"}], ";", 
    RowBox[{"kT", "=", "4.012"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"kaF", "[", 
      RowBox[{"ka_", ",", "f_"}], "]"}], ":=", 
     RowBox[{"ka", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"f", "*", 
        RowBox[{"xb1", "/", "kT"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "off", " ", "rate", " ", "under", " ", "force", " ", "for", " ", 
       "APC"}], "-", 
      RowBox[{"Ag", " ", "bond"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"kbF", "[", 
      RowBox[{"kb_", ",", "f_"}], "]"}], ":=", 
     RowBox[{"kb", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"f", "*", 
        RowBox[{"xb2", "/", "kT"}]}], "]"}]}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "off", " ", "rate", " ", "under", " ", "force", " ", "for", " ", 
       "BCR"}], "-", 
      RowBox[{"Ag", " ", "bond"}]}], "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nMeanF", "[", 
      RowBox[{"n0_", ",", "ka_", ",", "kb_", ",", "F_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"kbF", "[", 
            RowBox[{"kb", ",", 
             RowBox[{"F", "/", "i"}]}], "]"}], "/", 
           RowBox[{"kaF", "[", 
            RowBox[{"ka", ",", " ", 
             RowBox[{"F", "/", "i"}]}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", " ", "n0"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nVarF", "[", 
      RowBox[{"n0_", ",", "ka_", ",", "kb_", ",", "F_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"kbF", "[", 
         RowBox[{"kb", ",", 
          RowBox[{"F", "/", "i"}]}], "]"}], 
        RowBox[{
         RowBox[{"kaF", "[", 
          RowBox[{"ka", ",", " ", 
           RowBox[{"F", "/", "i"}]}], "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kbF", "[", 
             RowBox[{"kb", ",", 
              RowBox[{"F", "/", "i"}]}], "]"}], "+", 
            RowBox[{"kaF", "[", 
             RowBox[{"ka", ",", " ", 
              RowBox[{"F", "/", "i"}]}], "]"}]}], ")"}], "^", "2"}]}]}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "n0"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nStdF", "[", 
      RowBox[{"n0_", ",", "ka_", ",", "kb_", ",", "F_"}], "]"}], ":=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"kbF", "[", 
          RowBox[{"kb", ",", 
           RowBox[{"F", "/", "i"}]}], "]"}], 
         RowBox[{
          RowBox[{"kaF", "[", 
           RowBox[{"ka", ",", " ", 
            RowBox[{"F", "/", "i"}]}], "]"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"kbF", "[", 
              RowBox[{"kb", ",", 
               RowBox[{"F", "/", "i"}]}], "]"}], "+", 
             RowBox[{"kaF", "[", 
              RowBox[{"ka", ",", " ", 
               RowBox[{"F", "/", "i"}]}], "]"}]}], ")"}], "^", "2"}]}]}], ",",
         " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "n0"}], "}"}]}], "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nSensF", "[", 
      RowBox[{"n0_", ",", "ka_", ",", "kb_", ",", "F_"}], "]"}], ":=", 
     RowBox[{"nVarF", "[", 
      RowBox[{"n0", ",", "ka", ",", "kb", ",", "F"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Fisher", " ", "information", " ", "in", " ", "n_ag"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NagFisherInfo", "[", 
     RowBox[{"n0_Integer", ",", "ka_", ",", "kb_", ",", "F_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"nVarF", "[", 
       RowBox[{"n0", ",", "ka", ",", "kb", ",", "F"}], "]"}], "]"}], "^", 
     "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8699658383464518`*^9, 3.8699658417914047`*^9}, {
  3.869965948217835*^9, 3.869965963015079*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[175]:=",ExpressionUUID->"62a9e81e-4dc6-4d93-b44f-a49df5b59752"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noRebindInfoTable", " ", "=", " ", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"NagFisherInfo", "[", 
      RowBox[{"30", ",", " ", "1", ",", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "ebx"}], "]"}], ",", " ", 
       RowBox[{"30", "*", "10"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"ebx", ",", " ", 
       RowBox[{"-", "5"}], ",", "10", ",", "0.2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"ix", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "konTable", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"retioTable", " ", "=", " ", 
   RowBox[{"infoTableNag", " ", "/", " ", "noRebindInfoTable"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.869965473293016*^9, 3.86996561362134*^9}, {
  3.869965853528919*^9, 3.8699659052206573`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"f06a92c6-3a60-43d0-b2ef-f0a415e0fe25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"retioTable", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.86996534825476*^9, 3.869965357885347*^9}, {
  3.869965912428453*^9, 3.869965929283268*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"e91da7b3-b9dc-404f-ab80-327fd18150e7"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
+zA5bh8mx+3D5Lh9mBy3D5Pj9mFy3D5MjtuHX17wwBO3D7MeDzxx+zDr8cAT
tw+zHg88cfsw6/EP5wCnDz33zXOPPPfDfe/d99l9T933z32v3PfFfQ/87tfv
3vzuw/eefe/P91587utzD+/7+bvXuc/ee165vuBX/Ibf8Qf+xMu+B24fJsft
w+S4fZgctw+T4/Zhctw+TI7bh8lx+zA5bh8mx+3D5Lh9mBy3D5Pj9mFy3D5M
jtuHyXH78MsLHnji9mHW44Enbh9mPR544vZh1uOBJ24fZj3+4Rz09KHnXnru
m+ceee6H+96777P7nrrvn/teue+L+x743a/fvfndh+89+96f77343NfnHt73
83evc5+997JyfcVv+B1/4E+87Hvg9mFy3D5MjtuHyXH7MDluHybH7cPkuH2Y
HLcPk+P2YXLcPkyO24fJcfswOW4fJsftw+S4fZgctw+/vOCBJ24fZj0eeOL2
YdbjgSduH2Y9Hnji9mHW4/ah55577q/nXnrum+ceee6H+96777P7nrrvn/te
ue+L+x743a/fvfndh+89+96f77343NfnHt7383evc5+997pyfcPv+AN/4mXf
A7cPk+P2YXLcPkyO24fJcfswOW4fJsftw+S4fZgctw+T4/Zhctw+TI7bh8lx
+zA5bh8mx+3D5Lh9+OUFDzxx+zDr8cATtw+zHg88cfsw6/HAE7cPsx63D/O/
s/RhfIAP8RE+xp6DdIrPsPtAuw+q+wC6D5b7wLgPgt8B+x2c34H4HrTvAfoe
jM+BfQ7ifUB/BzsH2oNe3/EH/sTLvgduHybH7cPkuH2YHLcPk+P2YXLcPkyO
24fJcfswOW4fJsftw+S4fZgctw+T4/Zhctw+TI7bh8lx+/DLCx544vZh1uOB
J24fZj0eeOL2YdbjgSduH2Y9bh/mf1fpw/gAH+IjfIxP8Ck+w+6D7z7Q7oPq
PoDug+U+MBvsd8B+B+d3IL4H7XuAvgfjc2Cfg3gf0N/BzoH2oNcP/ImXfQ/c
PkyO24fJcfswOW4fJsftw+S4fZgctw+T4/Zhctw+TI7bh8lx+zA5bh8mx+3D
5Lh9mBy3D5Pj9uGXFzzwxO3DrMcDT9w+zHo88MTtw6zHA0/cPsx63D7M/47S
h/EBPsRH+Bif4FN8hj0HxH3w3QfafVDdB9B9sDbYfRD8Dtjv4PwOxPegfQ/Q
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
/fPPr8O//0KOOx8mx50Pk+POh8lx58PkuPPhlxc88MSdD7MeDzxx58OsxwNP
3Pkw6/HAE3c+zHrc+ZA+rA/wIT7Cx/gEn+IzfI4v8CW+wtf4Bm/wFu/wLb7D
9/gBP+In/Ixf8Cv2HHTPAfYcTM+BW/btOSCdD+nD5t/JcedD+rD5yne/zVe+
+2i+8t5f85Xnvs1X7vs1X5n77L2xcu18SB82/xc57nxIHzb/jRx3PqQPm/+x
7wUPPHHnQ/qw6/HEnQ/pw67HE3c+pA+7Hk/c+ZA+bJ75MP+OZT6MD/AhPsLH
+ASf4jN8ji/wJb7C1/gGb/AW7/AtvsP3+AE/4if8jF/wK37DnoPuOcCeg7ns
23OQOh+6z737PLvPqfv8uc+V+7y4z4Hf+fqdm995+J6z7/n5novPeX3O4X0+
f+c659lzv/z5dfj3f5HjzofJcefD5LjzYXLc+fDLCx544s6HWY8HnrjzYdbj
gSfufJj1eOCJOx9mPe58SB/WB/gQH+FjfIJP8Rk+xxf4El/ha3yDN3iLd/gW
3+F7/IAf8RN+xi/4Fb/hd+w56J4DvOzbc+A6H9KHzb+T486H9GHzlX1fmq98
99t85buP5ivv/TVfee7bfOW+X/OVuc/eGyvXzof0YfNfyXHnQ/qw+e/kuPMh
fdj/Hk/c+ZA+7Ho8cedD+rDr8cSdD+nDrscTdz6kD5tnPsy/U5kP4wN8iI/w
MT7Bp/gMn+MLfImv8DW+wRu8xTt8i+/wPX7Aj/gJP+MX/Irf8Dv+wJ6Dvuzb
czA7H3rOked8uM+9+zy7z6n7/LnPlfu8uM+B3/n6nZvfefies+/5+Z6Lz3l9
zuF9Pn/nOufZc//68+vw77+S486HyXHnw+S48+GXFzzwxJ0Psx4PPHHnw6zH
A0/c+TDr8cATdz7Metz5kD6sD/AhPsLH+ASf4jN8ji/wJb7C1/gGb/AW7/At
vsP3+AE/4if8jF/wK37D7/gDf+Jl354D3PmQPmz+nRx3PqQPm6/s+9d8Zd+X
5ivf/TZf+e6j+cp7f81Xnvs2X7nv13xl7rP3xsq18yF92Pw3ctz5kD5s/se+
FzzwxJ0P6cOuxxN3PqQPux5P3PmQPux6PHHnQ/qweebD/DuU+TA+wIf4CB/j
E3yKz/A5vsCX+Apf4xu8wVu8w7f4Dt/jB/yIn/AzfsGv+A2/4w/8iZd9ew56
50PPufScN8858pwP97l3n2f3OXWfP/e5cp8X9znwO1+/c/M7D99z9j0/33Px
Oa/PObzP5+9c5zx77tc/vw7//hs57nyYHHc+/PKCB56482HW44En7nyY9Xjg
iTsfZj0eeOLOh1mPOx/Sh/UBPsRH+Bif4FN8hs/xBb7EV/ga3+AN3uIdvsV3
+B4/4Ef8hJ/xC37Fb/gdf+BPvOx74M6H9GHz7+S48yF92Hxl3+fmK/v+NV/Z
96X5yne/zVe++2i+8t5f85Xnvs1X7vs1X5n77L2xcu18SB82/50cdz6kD/vf
44k7H9KHXY8n7nxIH3Y9nrjzIX3Y9Xjizof0YfPMh/l3JvNhfIAP8RE+xif4
FJ/hc3yBL/EVvsY3eIO3eIdv8R2+xw/4ET/hZ/yCX/Ebfscf+BMv+x6486Hn
nHvOr+dces6b5xx5zof73LvPs/ucus+f+1y5z4v7HPidr9+5+Z2H7zn7np/v
ufic1+cc3ufzd65znj33259fh3//nRx3PvzyggeeuPNh1uOBJ+58mPV44Ik7
H2Y9HnjizodZjzsf0of1AT7ER/gYn+BTfIbP8QW+xFf4Gt/gDd7iHb7Fd/ge
P+BH/ISf8Qt+xW/4HX/gT7zse+DOh/Rh8+/kuPMhfdh85dyP5iv7Pjdf2fev
+cq+L81XvvttvvLdR/OV9/6arzz3bb5y36/5ytxn742Va+dD+rD5H/te8MAT
dz6kD7seT9z5kD7sejxx50P6sOvxxJ0P6cPmmQ/z70jmw/gAH+IjfIxP8Ck+
w+f4Al/iK3yNb/AGb/EO3+I7fI8f8CN+ws/4Bb/iN/yOP/AnXvY9cOfD5Ljz
oeece86v51x6zpvnHHnOh/vcu8+z+5y6z5/7XLnPi/sc+J2v37n5nYfvOfue
n++5+JzX5xze5/N3rnOePff7n1+Hf/9j3wseeOLOh1mPB56482HW44En7nyY
9XjgiTsfZj3ufEgf1gf4EB/hY3yCT/EZPscX+BJf4Wt8gzd4i3f4Ft/he/yA
H/ETfsYv+BW/4Xf8gT/xsu+BOx/Sh82/k+POh/Rh85Vz35qvnPvRfGXf5+Yr
+/41X9n3pfnKd7/NV777aL7y3l/zlee+zVfu+zVfmfvsvbFy7XxIH/a/wxN3
PqQPux5P3PmQPux6PHHnQ/qw6/HEnQ/pw+aZD/PvQObD+AAf4iN8jE/wKT7D
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
x2SU
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwsnWW41NYahc9EJ5NMkjlAgZYWaAulQt2VulF3d3d3d3d3d1fq7u5e6u7u
N+9d68d+1tn7m29lJ9nvmgPt7R258Q4rbx/09fVNnLGvL2x0lWa0msHaan1a
i5qxqteYr9GMuBlJM1Z3nfmaXkubcUAzxjajse1bpxlZMzrNWNeaN2M9a9GM
DZrRbUbZjM2aMaAZA5uxSTN6zehvxoauV83YyFo3Y+1mtH2Njb1Gz/r2xndT
e+C7ub0HNWML6yR8rrnxuxu9pxlr+T7w3aoZg5sxpBm7NmPKZkzVjO2aMVkz
hjVj22ZM6vkuzRjpz23v+uTN2M19Uzdjx2ZM0YzhzdjBdea7uz6qGfs2Y7pm
TN+M/awzNGMP10c3Y0/rNM3Y2nsc2owtfU/se+9mjGnGtM3Yx4rvXu6jtr+9
eWfb2IP7OdDvcKZmHNyMmZsxSzMuasYKzVixGYc2Y9ZmzNaMQ1xnfngzZm/G
HM04zHXmR3htzmYcZG98j27G3M2YpxnHWOdtxrHW+ZpxfDPmb8YCzTi1GYs0
Y9FmnNyMcc1YuBknuL5gM060LtSMo5oxl69xktfoOc7e+J5iD3xPs/dizTjd
ungzjvTe8TrDa0s040zrks04pxlLN2OZZpxrXbYZlzZj5T5xdpkVti72s1yp
Gec3Y3wzlmvGee5jfmEzlvdzv8B15jv16RyNaMbl9oPd6/rEHsxd4TV4vdIK
x2d5v0s149o+sUTP1X3iGQ6usVK7yn3Urrc3HJ9tD+55Z+8FBm5wHRZvtMI6
nMEVZ/bWPnEL67f0iW3md/XpHPO521yH43vcxzm9o095AdO3u878Xtfh8mE/
I/b1iBVG73Mdju+3wut7fTpznIs77U1OPNgnVmH3ISu+D7iP2qP2Jice7xPz
MD3BHtzPY65Te8J1mH6qTzzD5dNW2H2pTxzCystWWHyxTzlL7dk+sU1mPOM+
5s/3KTvg+znXmb/v+4OnV+wHu2/3iRNYfNVr8P2aFY7f7ROfPKO3+sQDPW/0
iXn4ftNK7XX3UXvH3vQ/6fvmnsuW3ivvbaL3Bcf/9ekcc9Zu7tN3AOfjwz6x
Dccf+LPMP+5TFsDxR64z/7JPfHLev+gTt8w/8WfJkq/7dI5h98c+8UbO/WSF
0W9ch+lvrTB6U5/ONfv7vE95wTW+7xPP8PqDFd/v3Eftl2Zc0qds+Mp7ZB+f
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
jWsfHOu8wPEhVjhuJU2WN3pjMw6LxSfsHuo68yNiMUw2HO468yO9Rk7gsZ7f
yTGxuIXpY62we5yVs3xCLIZh97RY/3wLRk+JxR4snug6jJ5khd2jY2UH1zjZ
a/Qcb298T7UHvqfbm2w4w0o2HOW943Wm1+D7LCtMnxuLSXg9zwqvl8bKBfi7
zApbl8TKRGoXxGKenDjffcwvisU22XCh68wn+h54NpfbD3avi8UJLF7hNXi9
0grHZ3u/ZM+1sXig5+pY3MLENVZqV7mP2vX25v2dYw/u+WLvkfu50e8W7l+K
9fsfOXRbLD5h99ZmbOz5HbEYJhtud535nV4jJ26yHzlxdyxWOfv3WGHiXivn
+v5YTMLxo7EYg8WHY3FI/j3gOrw+aIXLu2JlB9d4yGv03GdvfB+xB76P2Zuc
eNxKTkzw3vF6wmtkxpNWGH0mFp9w+awVFl+JxSH8vWqFs5f9LKk9Hysv4P45
9zF/MVZ28NxfcJ35zX5+5Otr9oPjd2NxCH+vew1237DC9FPeLzn0Tiyu6Hkr
Ftvw8baV2pvuo/aevWH6aXtwz/xOxt+D8Pcc77vOmX7Ma/y56ONY3ML6R7HY
Zv5pLG7Jg09cZ/6Z1+C4SnQmeG9fxuIWXr+ywsHXVs4y/9sGGIbdn2OdaRj9
MRZ7sPid6zD6vRV2v4iVF1zjB6/R84298f3JHvj+Ym+y4Vcr2fC5947Xb16D
79+tMP1XLCbh9W8rvIaJOOE9x83Pt8TiLEjEJLV/YzFPTvzjPub8xzFgm2z+
z3XmH8bKVp57ksgPjruJOIS/NNEa7LYTKUz/4f2SPUUirujpJGIbPvJESi1L
1EetTOTN+/vTHtzzB7Eyjz3Vid4trM+S6AyRiwMTcQvrAxKxzXySRNySB4MS
1ZkPTrQGx71EfmTDpIm4hdfJEikcDEuknOUpEjEMu1MnyjsYnTIRe7A4PFEd
RkckUtgdmigvuMbIRGv0TJ7IG9+pEnngOyqRN9kwOpGSDUMS7R2vaRKtwfeY
RArT0ydiEl5nSKTwOluiZ8p7nj2RwtmsiZ4ltRkTMU9OjE3Ux3zmRGzz3GdK
VGfen+j58dznSOQHx/Mn4hD+5ky0BrtzJVKYnjbRfsme+RJxRc88idiGj3kT
KbW5E/VRWyCRN0xPl8iDe56xaPabN/trxoKJ6nA5tll/O1dt0UTcwvoiidhm
vngibsmDxRLVmS+RaA2Ot090JnhvSyfiFl6XSaRwsGwi5Swvl4hh2F0l0e9V
MLpSIvZgcflEdRhdIZHC7lKJ8oJrrJhojZ7xibzxXTmRB76r2ptsWL0ZUaJs
+LsZVzfjmmYsmeg+8F0zEecwvUkiHnif6ybiFl7XScQq840Tccjn1nMd1jd1
H/xtkCgvYHp915lv5jq8bpOIB5jb1gpzm7sOr1tY4Xgt75G8WcP3xL63SsQz
TGxtxXdL91Hbzt68s7Xtwf3s4HcI0zsl4hZeT0x0bvjfwO2SiFX43tl15rsl
YpUM2NV15rt7DXZ3tDe+eyViFUb3tnL297FyfvdLxC28HpIo4+DyoES8wd/+
rsPlAVZ43TNRRnCNA71Gz772xvdge+B7qL3Jg8Os5MEe3jteh3sNpo+wwvHR
iTiE0WOsMHpyM8Y1Y+FmnGKFrZP8LKkdl4hzsuFY9zE/IRHPPPfjXWe+YaJz
xHf7qfaD3XMSsQdzp3kNXk+3wvGR3i95c3Yilug5MxHPcHCWldoZ7qN2rr3h
+Ch7cM8beS8wcJ7rsHi+FdbhDK44sxcn4hbWL0rENvOrEp1jPneJ63B8jfs4
p5clyguYvtR15te6Dpc3+xmxr1usMHqd63B8vRVen0105jgXVzRjtUQ5cWMi
VmH3Jiu+N7iP2q32JiduT8Q8TF9pD+7nNtep3eE6TE9IxDNc3mWF3QcTcQgr
D1lh8YFEOUvtnkRskxl3u4/5fYmyA77vdZ35c74/eHrYfrD7VCJOYPERr8H3
o1Y4fiYRnzyjJxPxQM/jiZiH7yes1B5zH7Wn7U3/nb5v7vkfv1fe2/PeFxx/
k+gcc9YuTPQdwPl4MRHbcPyCP8v85URZAMcvuc78zUR8ct7fSMQt81f8WbLk
7UTnGHY/SMQbOfehFUbfcR2m37XC6AWJzjX7ez1RXnCN9xPxDK8Trfi+5z5q
H9mbbHjLe2QfryXKILxe9R6Zf+zPkh9fJGISXr9PxBh7+cHKM/vRClufJ+Kf
ni/dB9/fJWKV/q8TZQHP/SvXmX/r98Dn/kjEBuf6r0SswvTPiXiG108T5RHZ
84n3y/xP99Hzk/dFzy/ug+NfrfD9mT3Y9+/NuNzX/jfReYHj/6xwvF/aZHkz
ZmhGKxWfsMt/II468zAVw2RDkKrOPEq1Rk7g8abfSZqKW5hup1LYzVIpZzlP
xTDs9pqf70/EaJWKPVgsUtVhtJtKYTdJlR1co0y1Rk8nlTe+dSoPfPtTeZMN
A1Ip2RCn2jteA1OtwfegVArTQ1IxCa9DUym8jkiVC/A3MpXC1vBUmUhtslTM
kxOTpupjPnkqtsmGYanqzNdNdQ88mylT+cHutKk4gcWpUq3B69SpFI4nSbVf
smdMKh7oGZ2KW5iYJpVSG5Wqj9p0qbx5f4NTeXDPU6TaI/fD+eDdwv3yqX7/
I4dmTsUn7M6UinPms6ZimGyYJVWd+Wyp1siJsan8yIk5U7HK2Z8rlcLE3KmU
cz1vKibheFwqxmBxwVQckn/zparD6/ypFC7nSJUdXGOBVGv0zJPKG9+FUnng
u3Aqb3JikVRKTsyeau94LZpqjcxYLJXC6JKp+ITLpZuff0vE4oqpOIS/lVIp
nK2Q6llSWzZVXsD9Mqn6mC+XKjt47uNT1ZnPmOr58dxXTuUHx2ul4hD+VvEa
7K5qhenFU+2XHFozFVf0rJ6KbfhYw0ptNfdRW9veML1EKo9fzBvfn3zXruM6
Z/ruZmzVjK2bsWEqbmF9g1RsM984FbfkwUauM9/Ea3B8dKozwXvbPBW38LqF
FQ62tA729WAYdndMdaZhdPtU7MHiNq7D6LZW2N0sVV5wje28Nsz3Mdi+O9gD
353sTTbsbCUbNvXe8drFa/C9qxWm90jFJLzuaYXXA1Jxwns+0Apn+6diktre
qZgnJ/ZyH/N9U7FNNu/jOvP1U2Urz/0g+8Hxkak4hL+DvQa7h1hhejfvl+w5
IhVX9ByWim34ONxK7VD3UTvK3ry/3e3BPa+XKvPY0zF+t7B+XaozRC6ekIpb
WD8+FdvMT0rFLXlwouvMT/YaHB9rP7LhtFTcwuvpVjg4w8pZPrsZS6Vi98JU
eQej56diDxbPcR1Gz7XC7qmp8oJrnOc1es60N9lwgT3wvcjeZMPFVrLhFO8d
r0u8Bt+XWmH6ilRMwuuVVni9wc+U93yjFc6u97OkdnUq5smJq9zH/NpUbPPc
r3Gd+XF+fjz3m+wHx3em4hD+bvYa7N5ihenLvF+y545UXNFzWyq24eN2K7Vb
3Udtgr1h+nJ7cM/8WZC/S+XvWe5yHS7nzJqMbzffH824PxW3sH5fKraZP5iK
W/LgAdeZP+Q1OP7CZ4L39mgqbuH1MSscPG7lLD+ZimHYfT7V71Uw+mwq9mDx
Kddh9Gkr7D6SKi+4xjNeo+cJe+P7nD3wfcHeZMOLVrJhj+aeRzVjdDMe9n3g
+3IqzmH6vVQ88D5fT8UtvL6WilXm76bikM+94Tqsv+8++HsrVV7A9JuuM5/o
Orx+mooHmPvMCnMfuA6vH1rh+BXvkbx5yffEvj9OxTNMfGLF9yP3Ufvc3ryz
V+3B/XzVjLNSMf1NKm7htWjr3PC99F0qVuH7W9eZ/5CKVTLge9eZ/+g12P3a
3vj+kopVGP3Vytn/zcr5/SMVt/D6X6qMg8t/UvEGf3+6Dpd/WeH151QZwTX+
9ho9v9sb33/tgS//gWe8yYNWW0oe/OS94xW0tQbTYVsKx0lbHMJo2pbCaNn8
fE+j9zajakthq9vWs6SWtcU52dBuq4953hbPPPdOW3Xmb6c6R3y31235we7g
ttiDuZ55htf+thSOo7b2S95M0hZL9Axsi2c4GGQeqA1oq4/akLa84Thuy4N7
fsd7gYGhbdVhcdK2FNbhDK44s1O0xS2sT94W28ynbusc87nhbdXhGD7p45yO
bCsvYHpEW3Xm07RVh8uxbT0j9jVjWwqjY9qqw/G0bSm8Lt3WmeNcTNmWNzkx
fVuswu4MbSm+07XVR22mtrzJiVnaYh6mp2rLg/uZua06tVnbqsP07G3xDJdz
tKWwu0BbHMLKgm0pLM7f/PxlqtpcbbFNZszZVh/zedrKDvieu60682Xauj94
WqgtP9hdoi1OYHFcW2vwvXBbCsdLtcUnz2jxtnigZ9G2mIfvxdpSaou01Udt
yba86Z+trfvmnvd07vLelm1rX3C8VVvnmLM2rK3vAM7Hcm2xDcfj2/os8xXa
ygI4Xr6tOvPV2uKT875qW9wyX7Gtz5Ila7R1jmF3vbZ4I+fWt8Lomq7D9FpW
GJ2srXPN/lZpKy+4xjpt8Qyv61rxXdt91DawN9mwuvfIPlZuK4PwWqmtPTLf
0J8lPzZri0l43bYtxtjLdlae2fZW2Nq0Lf7p2dx98L1NW6zSv2VbWcBz38J1
5lv7PfC5Xdtig3O9e1uswvSObfEMrxu3lUdkz0beL/Pd3EfPDt4XPTu5D453
tsL3JvZg37t4jWvv5fMCx3tb4fiPZlzRjCubsW9bfMLuPq4z378thsmG/Vxn
foDXZrTHan4nB7fFLUwfYoXdQ62c5cPbYhh2j2vGfG0xenRb7MHiEa7D6JFW
2D2orezgGkd5jZ7D7I3vMfaYtxnH25tsOMFKNhzoveN1otfg+yQrTJ/aFpPw
epoVXs9tKxfg7zwrbJ3TViZSO6Mt5smJ093H/Ky22CYbznSd+eu+B57N+faD
3cva4gQWL/AavF5oheOTvV+y59K2eKDn4ra4hYlLrNQuch+1y+3N+zvFHtzz
2d4j93Ol3y3cP9nW73/k0LVt8Qm717TFOfPr22KYbLjOdeY3eI2cuMp+5MTN
bbHK2b/FChO3WjnXt7fFJBzf0xZjsHhXWxySf3e4Dq93WuHyprayg2tM8Bo9
t9kb37vtge+99iYn7rOSEzd673jd7zUy4wErjD7cFp9w+YgVFp9ui0P4e8YK
Z0/5WVJ7rK28gPtH3cf8ibayg+f+uOvMr/bz47k/az84fqUtDuHvOa/B7vNW
mH7Q+yWHXm6LK3pebItt+HjJSu0F91F71d4w/ZA9uGd+J+PvQfh7jtdc50zf
6zX+XPR2W9zC+lttsc38vWYc21YevOM6HL/vNThOMp0J3tuHbXELrx9Z4eBj
K2f507YYht2v2zrTMPplW+zB4meuw+jnVtj9oK284BpfeI2eT+yN71f2wPcb
e5MN31rJhoneO17feQ2+v7fC9E9tMQmvP1vh9a+2OOE9/22Fsz/bYpLar20x
T0784j7mv7fFNtn8m+vM32wrW3nu/9gPjqNMHMLfv16D3f+sMP2D90v2hJm4
oqeViW34CDIpNf7PZOijFmfy5v39aA/u+Y22Mo89pZneLayPyXSGyMU8E7ew
3snENvNuJm7JgyJTnXmZaQ2O25n8yIZeJm7htT+TwsGATMpZHpSJYdidLFPe
wejQTOzB4iSZ6jA6OJPCbp0pL7jGkExr9AzM5I3vpJk88B2WyZtsmDyTkg1V
pr3jNUWmNfgenklhespMTMLrVJkUXqfL9Ex5z9NnUjibNtOzpDYqE/PkxNSZ
+phPk4ltnvvoTHXmWabnx3OfIZMfHM+eiUP4G5tpDXZnan5+ty2mR2TaL9kz
Wyau6JklE9vwMWsmpTZzpj5qc2TyhumRmTy4Z/55PP8OHH8vM1cmJmF91rzx
6TQ+zZgvE7ewPm8mtpkvkIlb8mD+THXmC2Zag+PNMp0J3tvCmbiF10UyKRws
mkk5y4tnYhh2l830exWMLp2JPVhcIlMdRpfMpLA7LlNecI2lMq3Rs1gmb3yX
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
63Mdscr81Y445HMvuA7rr7sP/l7qKC9g+kXXmb/hOry+1xEPMPe+FebedB1e
37LC8TPeI3nzlO+Jfb/TEc8w8a4V37fdR22ivXlnz9qD+/nQ7xCmP+6IW3gN
c50bvpc+7YhV+P7Edeafd8QqGfCZ68y/8BrsfmRvfL/uiFUY/cbK2f/Wyvn9
viNu4fXXjjIOLn/uiDf4+8F1uPzRCq9fdZQRXOMnr9Hznb3x/cUe+P5mb/Lg
dyt58KX3jtcfXoPpP61w/E9HHMLov1YYjZvndkujtzYjyaWwFeV6ltT4P4iH
c7LhP/cxD3LxzHNv5aozf7mjc8R3e5rLD3bLXOzBXDvXGrxmuRSO//J+yZtu
LpboyXPxDAeFeaDWydVHrcrlDcd/24N7fsV7gYE6Vx0We7kU1uEMrjizk+Ti
FtYHNT8/3NF8WK5zzOcG56rDMXzSxzkdmisvYHpIrjrz4bnqcDkq1zNiX6Nz
KYyOyFWH45G5FF7H5TpznItJc3mTE1PlYhV2p86l+E6Zq4/aNLm8yYlpczEP
05Pl8uB+xuSqU5suVx2mZ8jFM1yOzaWwO3suDmFljlwKi7PlyllqM+Vim8yY
MVcf81lyZQd8z5yrznzhXPcHT3Pm8oPdBXJxAotz5VqD77lzKRwvlItPntH8
uXigZ95czMP3fLmU2jy5+qgtmMub/ulz3Tf3vKNzl/e2SK59wfGGuc4xZ21A
ru8Asn+xXGzD8aK5Pst8iVxZAMeL56ozH5+LT877srm4Zb5krs+SJcvnOsew
u2ou3si51awwukKuOkyvmEthtD/XuWZ/y+TKC66xci6e4XUVK74r5eqjtrq9
yYblcu2RfSydK4PwWirXHpmv4c+SH+vmYhJeN8nFGHvZ1Moz27wZA3OxtU4u
/ulZz33wvXEuVunfIFcW8NzXd535Rn4PfG7bXGxwrrfPxSpMb5mLZ3hdK1ce
kT1rer/Mt3MfPVt4X/Rs5T443toK32vbg31v4zWuvZPPCxzvbIXj75txfjMu
aMauufiE3V1cZ757LobJht1cZ76H10bbY7zfyd65uIXpfaywu6+Vs7x/LoZh
99Bc/3wLRg/OxR4sHuA6jB5ohd29cmUH1zjIa/TsZ298D7EHvofZm2w43Eo2
7Om943WE1+D7SCtMH5OLSXg91gqvp+TKBfg71QpbJ+fKRGrH52KenDjOfcxP
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
3+6KW3j9q6tzw/fSu12xCt/vuM78/a5YJQPec535RK/B7lv2xvejrliF0Y+t
nP1PrJzfz7riFl6/bca5XXH5VVe8wd/nrsPlF1Z4/bCrjOAaX3qNnk/tje/X
9iA7v7M3efC9lTz4wHvH6wevwfSPVjj+pSsOYfRXK4z+04xrmnFtM/61wtbf
fpbUfu+Kc7LhN/cx/7Mrnnnuf7jO/KmuzhHf7f/ZD3aTUuzBXJ95htdWKYXj
n7xf8iYuxRI9YSme4SAyD9SCUn3U0lLecPyzPbjnp70XGGiXqsNiVkphHc7g
ijPbLcUtrBel2GY+oNQ55nNlqTocwyd9nNO6VF7AdFWqznySUnW4HFbqGbGv
yUspjA4uVYfjIaUUXucqdeY4F71S3uTEpKVYhd3JSim+Q0v1UZuilDc5MaIU
8zDdX8qD+xleqk5tZKk6TE9Vime4nLqUwu70pTiElRlKKSxOVypnqY0uxTaZ
MapUH/MxpbIDvqcpVWc+d6n7g6expfxgd/ZSnMDijKXW4HumUgrHc5bik2c0
Wyke6JmlFPPwPWsppTZzqT5qc5Typn/KUvfNPW/h3OW9zVNqX3C8ZqlzzFnL
S30HcD7mK8U2HM9b6rPMFyiVBXA8f6k688VK8cl5X7QUt8wXan7+pqssWaLU
OYbd8aV4I+eWK6UwumSpOkwvVUphtFPqXLO/RUrlBddYphTP8LpsKcV36VJ9
1JYv5U02LF5qj+xj4VIZhNe4UntkvkKpz5Ifq5ZiEl7XKcUYe1nXyjNbzwpb
q5Tin57V3Affa5dilf41SmUBz31115mv5ffA5zYpxQbnerNSrML0BqV4hteV
SuUR2bNiqf0y39R99KzvfdGzofvgeCMrfK9cyoN9b+w1rr2lzwscb2WF48+b
cXozzmjGNqX4hN2tXWe+XSmGyYZtXWe+vdcmtwfnhneyUyluYXpnK+zuYuUs
71aKYdjdpxnTlmJ0r1LsweLursPoHlbY3bFUdnCNPb1Gz672xndve+C7r73J
hv2sZMMO3jte+3sNvg+wwvTBpZiE10Os8Hp0qVyAv2OssHVUqUykdlgp5smJ
Q93H/IhSbJMNh7vO/DHfA8/mWPvB7qmlOIHF47wGr8db4fhA75fsOaUUD/Sc
VIpbmDjZSu3EZizo2mn25v0dZA/u+Ujvkfs5w+8W7u8s9fsfOXROKT5h9+xS
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
Lr+0wu43tfiE6W+tcPlLLcYubcavVtj62c+S2ve1cgF2v3Mf8x9rMcxz/8F1
5g/VOkd8b/9mP9j9txZ7MPe71+D1Dyscf+X9kjH/1GKJnr9q8QwHf1up/ek+
av/ZG46/tgf3/LD3AgN9PdVhsdWTwjqcwRVnNu6JW1iPemKbed7TOeZzSU91
OIZP+jin7Z7yAqbTnurMy57qcDmwp2fEvgb1pDBa9VSH47onhdeZezpznIus
J29yor8nVmF3QE+Kb6+nPmqT9ORNTgztiXmY7vTkwf0MaX5+rFZt0p7qMD2s
J57hcvKeFHan7olDWBnVk8LiVD3lLLXhPbFNZkzRUx/zkT1lB3yP6KnOfJae
7g+eRvfkB7tje+IEFqfpaQ2+x/SkcDxTT3zyjGboiQd6puuJefievielNm1P
fdRm7Mmb/sl6um/ueQPnLu9t1p72Bccr9nSOOWthT98BnI/Ze2Ibjmfr6bPM
5+wpC+B4jp7qzOfviU/O+3w9cct8rp4+S5Ys2NM5ht3FeuKNnFu8J4XRhXqq
w/S4nhRGg57ONfubt6e84BqL9MQzvC7ak+K7cE991JboyZtsWKCnPbKPeXrK
ILzm7mmPzJfs6bPkx/iemITXVXpijL2sauWZrWaFrWV74p+e5Xrqg++Ve2KV
/hV6ygKe+/I91Zmv1NN74HPr9MQG53q9nliF6TV64hlel+4pj8iepXraL/N1
3UfP6t4XPWu6D47XssL3Mj15sO+1vca1N/R5geONrHA8sRnHN+OEZmzSE5+w
u7HrzDfriWGyYVPXmW/utUH24NzwTrbuiVuY3sYKu9taOcvb98Qw7O7a0z/f
gtGde2IPFndwHUZ3tMLuVs0Y7Gvs5DV6trM3vrvYA9/d7E027G4lG7bw3smh
PbwG33taYXqfnpiE132t8HpIT7kAf4daYevgnjKR2v49MU9O7Oc+5gf2xDbZ
cIDrzO/3PfBsDrMf7B7bEyeweLjX4PUIKxzv5f2SPcf0xAM9R/XELUwcbaV2
pPuoHWdv3t/e9uCeD/IeuZ8T/G7h/saefv8jh07piU/YPbknzpmf1hPDZMOp
rjM/3WvkxIn2IyfO6olVzv7ZVpg4x8q5Pq8nJuH4kp4Yg8WLeuKQ/DvfdXi9
wAqXZ/aUHVzjQq/Rc6698b3YHvheam9y4jIrOXGG947X5V4jM66wwujVPfEJ
l9dYYfHmnjiEv1uscHaTnyW163rKC7i/1n3Mb+gpO3ju17vO/CQ/P577rfaD
43t64hD+bvMa7N5uhekrvV9y6O6euKLnzp7Yho+7mrGla3e4j9q99obpq+zB
PfN7GX824s9F97nOmeZ3N/6cxJ+LHu6JW1h/qCe2mT/aE7fkwSOuM3/Ma3D8
jc8E7+3JnriF16escPC0lbP8bE8Mw+7LPZ1pGH2xJ/Zg8TnXYfR5K+w+0VNe
cI0XvEbPM/bG9yV74PuKvcmGV61kw+PeO16veQ2+X7fC9Fs9MQmvb1vh9cOe
OOE9f2SFsw96YpLauz0xT0684z7m7/fENtn8nuvMH+wpW3nuH9sPjr/qiUP4
+8RrsPupFabf8H7Jni974oqez3tiGz6+sFL7zH3UvrY37+9Ne3DPD/SUeezp
W79bWK/7dYbIxR974hbWf+iJbeY/98QtefCT68x/8Rocf2c/suH3nriF1z+s
cPCnlbP8d08Mw27Qr7yD0b5+sQeL/7gOo/9aYfe3nvKCa/znNXr+sje+rX55
4Bv2y5tsiPqlZMOv3jtecb/W4Dvpl8J01i8m4TVvfp7QE6/9/XqmvOcB/VI4
6/XrWVLr9ot5cqLoVx/zql9s89zLftWZf+/nx3Mf2C8/OJ6sXxzC36B+rcHu
JP1SmE77tV+yZ9J+cUXPkH6xDR9D+6XUBverj9qwfnnDdLtfHtwz/x0L/vsx
/DdiJu9XHS6H94t5mJ6yX9zC+sh+sc186n5xSx5M1a8681H9WoPj8f06E7y3
Mf3iFl6n7ZfCwXT9Us7yDP1iGHZn7dfvVTA6c7/Yg8Wx/arD6Iz9Utidpl95
wTVm6tcaPdP3yxvfWfrlge9s/fImG2bvl5INbzU/H9mMo5oxul/3ge+c/eIc
phfuFw+8z3n7xS28ztMvVpmP6xeHfO5/LJ1luFbVFoXP14X1JXZ3d2CBiYFJ
iEoYCIoiCII0ooiAtBiAIKKCiKgodid2d3ehWCgWd753jB/jmc49Y62193rn
OaLX26KsOKy3KqsO/vYra17A9L5lxfEPKisOr63L4gHmjijLwtzBZcXh9ZCy
LBzvWdYemTe7l3Um9n1YWTzDxOFlWfoeWlYdsSPL6s0326usHpzn6LK+IUwf
Uxa38NqrrHuzQei4sliF72PLiuOfUBarzIDjy4rjn+hnsNumrN70bV8WqzDa
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
M9W96Xute9B3hnszJ2baMifGe+/0us7PmBmzbGF0TlV8wuUNtrB4S1Ucwt8C
Wzib73dJ7Maq5gXcz3Ud/s1VzQ7e+02O44/2++O93+p+cLy4Kg7hb6Gfwe5t
tjA92/tlDt1ZFVfU3F4V2/Bxhy2xRa4jdpd7w/T17sGZ+Z2MPwfhzznudpw7
Pd3P+Pui+6viFtbvq4pt/Aer4pZ58IDj+A/5GRx/6TvBd3u0Km7h9TFbOHjc
lrv8ZFUMw+5zVd1pGH22KvZg8SnHYfRpW9h9pKp5wRrP+Bk1T7g3fZe6B32f
d29mwwu2zIaHvXd6vehn8P2SLUy/WhWT8PqaLby+WxUnfOf3bOHsnaqYJPZG
VcwzJ153Hf5bVbHNbH7Tcfx7q5qtvPf33Q+OP6uKQ/j7wM9g90NbmH7Z+2X2
fFoVV9R8XBXb8PGJLbGPXEfsi9Bkf79X3IMz31PVzGNPX/nbwnqupjvEXPyu
Km5h/duq2Mb/oSpumQffO46/zM/g+Gv3YzYsr4pbeP3ZFg5+seUu/1YVw7D7
V1XzDkb/rIo9WPzdcRhdYQu7P1U1L1jjDz+j5lf3pu9K96Dv3+7NbPjHltnw
o/dOr3/9DL7/s4XpRE1MwmuyJguvhZreKd+5WJOFs3xN75JYuibmmROpmurw
szWxzXvP1BTH/8bvj/deqqkfHJdr4hD+mtX0DHZXq8nC9Crvl9mzVk1cUbNG
TWzDx5o1WWKr11RHrFJTb5huqqkHZ+afyfPvxfDvxNRqYhLW12xEn3r0Ca1d
E7ew3rwmtvHXrYlb5sE6NcXx16vpGRwfXNOd4LttWBO38LpRTRYONq7Jcpc3
rYlh2N26pt+rYHTLmtiDxc1qisPo5jVZ2N2gpnnBGlvU9IyaTWrqTd+taupB
321q6s1s2LYmy2x4Nf56WGh4aP2azkHf7WviHKb3rokHvufONXELrzvVxCr+
XjVxSN4uNcVhfZ+a6uBv9/jrz6tietea4syPFjXF4bVlTTzAXKuaLMztW1Mc
XverycLxDjXtkXmzXU1nYt8H1MQzTBxYk6Xv/jXVETuopt58sx1r6sF5Dqnp
G8L0YTVxC6/davrzO+5O65pYhe/Da4rjH1kTq8yAI2qK4x9V0zPYPbSm3vQ9
piZWYfTYmix3/7iaLPf3hJq4hdeTappxcNm+Jt7g70TH4bKtLby2qWlGsEY7
P6Pm+Jp607eDe9C3o3szD062ZR4cXdPe6XWKn8H0qbZw3KUmDmG0qy2Mdg/V
Q41QD1vYOsvvktjpNXHObDjNdfhn1sQz7/0Mx/H3qOke8bP9bPeD3d41sQdz
5/gZvPa0heNO3i/z5vyaWKLmvJp4hoNetsTOdR2xPu4Nx53dgzPvWdNeYOAC
x2Gxry2swxlccWcH1MQtrPeviW38oTXdY/IuchyOh7uOezqopnkB0wMdxx/h
OFyO9jtiX5fbwujFjsPxSFt4vaGmO8e9GOzezIlRod1qYvcyW/pe4jo4HuPe
zIlxNTEP00Pcg/OMdZzYFY7D9ISaeIbLibawe1VNHMLK1bawOK2mOUtsck1s
MzMmuQ5/ak2zA76nOI4/1+eDp2vcD3Zn18QJLF7rZ/A93RaO59TEJ+9oVk08
UDOzJubh+zpbYjNcR+x696Z+vM/NmV/zd+W73eh9wfETNd1j7tqFNf0M4H7c
XBPbcHyTc/Hn1zQL4Hie4/iLauKT+35bTdzi3+JcZskdNd1j2L2nJt6Yc/fa
wuidjsP0YlsY7VfTvWZ/C2uaF6xxd008w+sSW/re5Tpi97k3s+F275F93FrT
DKLXAu8R/37nMj8eqYlJeH26JsbYyzO2vLNnbWHr4Zr4p+ZR18H3UzWxSv3j
Nc0C3vtjjuM/6e9A3ks1scG9fqUmVmH6uZp4htcHa5pHzJ4HvF/8l11HzVLv
i5rnXQfHL9jC90Puwb5f9DPWfr2m+wLHb9jC8Qnxu0silAy9Hf6lNbH7puPw
+m5NDDMb3nEc/z0/Y07QY5G/yYc1cQvTH9nC7se23OVPa2IYdr8OXVkTo1/W
xB4sfuY4jH5uC7sf1DQ7WOMLP6PmE/em71fuQd9v3JvZ8K0ts+F9751e3/kZ
fH9vC9M/1sQkvP5kC68rapoL8PeHLWz9XtNMJPZzTcwzJ5a7Dv/XmthmNvzi
OP4udZ2Bd/On+8Huqpo4gcWVfgavf9nC8Q/eL7Pnv5p4oOafmriFiX9tif3t
OmJNdfXm+y1zD878m/fIebgffFu437Su3/+YQ9m6+ITdTF2c4+frYpjZkKsr
jl+o6xlzIlVXP+ZEs7pY5e6vVpeFidXrstzrNetiEo7rdTEGi9W6OGT+rVVX
HF7LdVm4LNU1O1ijUtczataoqzd9a3X1oG+jrt7MieZ1WeZEsa6902vtup4x
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
uaEbQkeEZoSmh44MzbQPZzc676jQdY61Cc0OzQodbUvs2NCc0PWhY2zJ27hJ
9477BKs3uS+MLQzd2iQ2FoRuaRKX80I3N4nj+fbb+hn1HZxLrLX3ztk6uh+9
4Pg2rwG3i+zD2O32Ye4O+11Cd9qH4btDdzWJOeziJt3XB0L3N4nhJc6D1Xvs
c68fdB7s3he6t0kM3+s87vdDzuO+P2yfd/Rk6Ikm8fZ46LEmcfyI8+D2Ufvd
vRfW6OVcYjD5bOiZJrH7hHvxHZ7yGnD+tP1+zsWH1aWu5x5/FPqwSVy9Fnq1
Saw+H3quSey+YB8GXnce3L7oGNy+HHqpSUy/5Ngw93ulSTy/4jzu98deG7be
cF/4eD/0XpNYfTf0TpP4fCv0ZpN4fdv+SD+jfpRziQ3w3jnnaPejFzx/4DXG
+tz4BzSJXViFv0+8P+5Qgh9KCcU/D33mPOynTWL4y9AXTWL+C+fB7VeOMdO5
X9w/uP029E2TuP3OPtx+b5/7viz0Q5M4+zX0S5NY/Dm0vEkM/+g8uP3J/jT3
/rpJ3C537Fr3Y43Z7kcvZsTvod+aNAtW2L/SPTgDPP/hGHz+aR8+/w791SRe
/7EPY6l4Z8mEzpxOyIdDnvFO4fi/0L9N4vlf18Mw73tVk9he5bwJft+f+F1m
EuoLH83ClhLiOJtQDG5zCfnMlZXeNyyRW0yI1ULYfELs8gwfznlGPZzz84c1
5vms9ILnNRL6+QS3aybkw+1aCfmPxl+XE/JhtBa2mhCr2EpCrNYTisHkOmHX
Toh14tTDbfOwjYQ4Jo7Pt9wv7L4J3fV1E6qH1fXDrpcQixuF3TAh9jZOyIfb
DRLKY0bQm33A6CYJ5cHk5mE3S4gn+rEGTG+aUB6zgDg+HG6RUA1cbpmQD6tb
JeTD1c5hd0qI123Cbp0Qn9sm5PONd0koD3a3SygGqzuE3T4hhrHEmCP02zEh
prHkMYM4N+fk7uyaUF/42Cfs3gnd773C7pkQt7uH3S0hjvdIyId1nlEPz+QS
Y9awd84GK/SjFzy3SGgNeOb7tPC7OzfU09/mPPtwe2DYAxJitWVCPoweHPag
hFjFtkqI1UPDHpLQnT4ibOuEWCdOPaweHvawhFgljs+8YJ39E7rHRyZUD7dH
hz0qId6ODXtMQvwdl5APn20SymNG0Jt9wOvxCeXBedvQiQmxQj/WgPkTnJd0
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
exNdA4uT7MPnZPutQ9ND16bE6NTQlJSYvNI+jM1wHrxOcww+rw5dlRK3Vzl2
uPtdk/LvB85jpnDvuE+wOtN9YWxu6IaU2JgTuj4lLmeFrkuJ49n2j/Iz6o9x
LrGW3jtnO8796AXHN3oNuL3JPozdbB/m5tmH1fn2YfjW0IKUmMPektJ9vTN0
R0oML3QerN5mn3u92Hmwe3toUUoML3Ie9/su53Hf77bPO3ogdH9KvN0Xujcl
jpc4D27vsd/Ze2GNbs4lBpOPhB5Oid373Yvv8KDXgPOH7Pd0Lj6sPup67vFb
oTdT4mpp6NmUWH089FhK7D5hHwaecx7cPukY3D4deiolpp9y7EL3eyYlnp9x
Hvf7ba8NW8+7L3y8HnotJVZfDb2SEp8vhV5MideX7cP8C64f6lxivbx3zjnc
/egFz294jZE+Nz4/O2EXVuHvHe+PO/Rn6A/H3w+95zzsuykx/GHog5SY/8B5
cPuRY8x07hf3D24/DX2SEref2Yfbz+1z378MfZESZ9+HvkuJxW9D36TE8FfO
g9uv7Y93749T4vYbxya7H2tc7X70gukfvAazYJn9K9yDM8Dzj47B50/24fOX
0M8p8fqrfRj7K7TSZ/7b/s1+xjuF499Dv6XE82+uv9Hve0VKbK9w3mV+3+/4
Xf7jvvCRip8PybQ4/tcxuP3PPnNlufcNS+Qm0mKVf6l2VUrs8gwfzle5Hs75
+cMas3xWesFzNq2fT3CbS8uH23xaPqwW0vJhtFnYUlqsYotpsbpaWjGYXCvs
mmmxTpx6uF0j7OppcUwcn2+5e9jd0rrr5bTqYbUatpIWi42w9bTYa56WD7e1
tPKYEfRmHzC6dlp5MLle2HXT4ol+rAHT66SVxywgjg+H66dVA6sbht0gLVY3
SsuHq63DbpUWr5uE3TgtPjdNy+cbb5NWHuxullYMVrcIu3laDGOJMUfot2Va
TGPJYwZxbs7J3dk2rb7wsUvYndO63zuF3TEtbrcPu11aHO+Qlg/rPKMenskl
xqxh75wNVuhHL3jeNa014Jnvs6vf3Rmh0/1tzrQPt3uF3TMtVvdOy4fRfcO2
SItV7D5psbpfWjHudMuwB6bFOnHqYfWAsPunxSpxfOYF6+yR1j1ulVY93B4c
9qC0eDss7KFp8Xd4Wj58HpJWHjOC3uwDXlunlQfnR4U9Mi1W6McaMH9EWnnM
AOL4MHx0WjVw2yYtH26PScuHqw6h9mlxeVzYY9Ni9fi0fHg7yXlwfIJjcNs2
dGJa3J/oWMb92qXFdzvnMSN5N3AFtx3dF966hrqkxUnnUKe0GD0ldHJaTJ9q
v+Bn1DdzLjFmCnvnbKu7H71g+jSvsZbvCH6f0JOhJ9JitZvvDWe4MTQ3rTve
PXRWWkyeEzo7LYaxPdLis6djcNg7dH5as6CH6+H2vNC5aXFLvJe/39TQlLTu
eh/Xw2rf0AVpsdg/dGFa7A2wD7f9nLeue7MPGL3IeTA5ODQoLZ4u8BowPdB5
WzuOD4dDXAOXQ+3D6jD7fMPRocvS4nVEaHhafF5sHw4udx7sjnQMVi8NXZIW
w5c4trv7jUqL6VHO28zn5pxwO8Z94W1SaGJanEwIjU+L0XGhsWkxfYX9vf2M
+n2dS2wH752z7e9+9ILpyV6jpb/PZL+/p9K6N8w+7gX3BnavCk1Li+2r7cPk
9NC1aTGMvSYtPmc4BoezQ7PSmgXXuB5urwvNTIvbWfYP9jpXpnXXr3c9rN4Q
mpMWizeldY9h72b7cDvXeUe6N/uA0XnOg8kFoVvS4mmO14Dp+c7r4Dg+HN7q
GrhcaB9Wb7MPV/eElqTF6+2hRWnxeYd93uO9zoPdOx2D1btCi9NieLFjZ7jf
3WkxfbfzDvK7mervc5/7wttjoUfT4uTh0ENpMfpA6P60mH7Qfnc/o/4c5xI7
1XvnbDD3iHvB9ONeA4afsM+fg/L3jfx9Hqw+ndYdOj8T8dBjGd3xZ0PPpMXk
86Hn0mIYuzQtPl9wDA5fCb2c1ixY6nq4fSn0Ylrcvmyf7/dr6Je07vqrrofV
10OvpcXiW6E302Lvbftw+4bzBrk3+4DRd5wHk++H3kuLp9e8Bky/67zRjuOP
9Dr0hckPXA+rH4U+TIvDT0OfpMUr9mN/269DX6XF62fOg9XP7cPHN86D3S9D
X6TF8BfOg89vnQdv39mHseWhn9Ji48fQsrS4/N55cPyD/bHeL2eY7lxiV3i/
nGem+9ELjn/2GrP9TfB3jHswIjQ8I+Z+8zeD1xWh39Pi+Q/7cPhXaGVa3GL/
TIvJvx2DvVWh/9Li/0/Xw+q/oX/SYvU/+zd4HdbmfvM/nqMePpPx14mM+MuE
TWfEWzYjH1ZTGeXd4t7sAy5zGeXBYTFsISOG6McacJzPKA/+iePDXimjGlhs
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
UaFLs2JoiNeA40uct6vj+LB3mWtgcbR9+LzcPixNDk3KitGxoTFZMTnOPsxN
cR68XuEYfE4Ijc+K2/GOHeB+E7PieKLzmCncO+4TrE51XxibHro2KzauCV2d
FZfTQldmxfFV9g/yM+oPdS6xvbx3zna4+9ELjmd4DbidaR/GrrMPc7Psw+ps
+zB8Q2hOVsxhr8/qvt4Smp8Vw3OdB6s32udeL3Ae7M4L3ZwVw9ibsrrftzqP
+77QPu9ocejOrHi7I3R7Vhzf5jy4XWS/vffCGp2cSwwm7wktyYrdO92L73CX
14Dzu+2f4Vx8WL3X9dzjF0MvZMXVY6FHs2L1/tB9WbH7gH0YeNx5cPugY3D7
cOihrJh+yLHz3O+RrHh+xHnc75e8Nmw94b7w8VxoaVasPht6Jis+nwo9mRWv
T9vv42fU93MusbO8d87Z3/3oBc/Pe42BPjc+PzthF1bh72Xvjzv0U+hHx18L
veo87CtZMfxG6PWsmH/deXD7pmPMdO4X9w9u3wm9nRW379qH2/fsc98/CL2f
FWefhT7NisVPQh9nxfCHzoPbj+xf6t5vZcXtx45d7n6sMcH96AXTn3sNZsEX
9i9xD84Az186Bp9f2YfPb0PfZMXrd/Zh7OfQcp/5F/vX+RnvFI5/CH2fFc/f
u36G3/eyrNhe5ryhft8v+13+6r7w8Xfor6w4/s0xuP3dPnPla+97nnNXZsXq
n6E/smJ3pX04X+F6OP/Ha0zzWekFz/9l9fMJblfZh1v+Q3f4sJrIyYfRdNhU
TqxikzmxmskpBpOFsPmcWCdOPdzmwmZz4pg4Pt9yu7Db5nTXiznVw2qzsKWc
WFwj7Oo5sbdmTj7crpZTHjOC3uwDRtfKKQ8mq2ErOfFEP9aA6XJOecwC4vhw
WMupBi7rOfmw2sjJh6uNwm6YE69rh22eE5/r5OTzjTfOKQ92180pBqvrh10v
J4axxJgj9NsgJ6ax5DGDODfn5O5sklNf+Ng67FY53e8tw26RE7ebhd00J443
z8mHdZ5RD8/kEmPWsHfOBiv0oxc8b5PTGvDM99nG7+6U0Mn+Nqfah9sdw+6Q
E6s75eTD6K5hd8mJVezOObG6W04x7vReYffMiXXi1MPqHmF3z4lV4vjMC9bZ
Pqd7vHdO9XDbIuw+OfG2f9j9cuLvgJx8+Nw3pzxmBL3ZB7wemFMenB8UtlVO
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
XgOO/3DeTY7jw95froHFv+3D5z/2YSkT7yxdEqP/hf4tislV9mEuW1IevPJ/
Jk8MPpPx14mSuMUS+/98D5sq+feDkvKYKdw77hOs5krqC2Orh12tJDaahS2V
xGUhbL4kjosl+bDKM+rhmVxiC7x3zgZn9KMXHK9R0hpwu2ZJPoytVZIPc+WS
fFitlOTDcCNsvSTmsLWS7uv6YdcrieHmJeXB6tol+S/4XpIHu+uGXackhrHk
cb83LCmP+75RST7vaIuwm5fE22ZhNy2J441LyoPbTUry4Z+9sAYMk0sMJrcJ
u3VJ7NKPXnyHLUtaA863KsmHZ3LxYXXbkuq5xweGPaAkrnYLu2tJrG4fdruS
2N2hJB8Gdi8pD253LCkGtzuH3akkprHE4Jh+u5TEM5Y87nfLktaGrT1K6gsf
+4XdtyRWW4TdpyQ+9wq7Z0m87l2SD/M8ox7WySXGDGLvnBPe6EcveN6/pDXg
m3PjX292fzF/rUraH3fotFDXkuKHhD24pDzsQSUxfFjYQ0tiHkse3B5eUoyZ
zv2qlsTtkWGPKInbo0ry4fboknzu+zFh25TEWdvQiSWxeELo+JIYPrakPLg9
riSfOUHv1iVxSy4x+KEfayTdj14w3c5rMAva22fW0IMzwHMHx+DzJPvweUro
5JJ4PdU+jJ0ROt1n7hY6syQOT/c7hePOJf3Mb2ZL/Rp+311KYruL85ihvG++
De/yLPeFj/NC55bEcXfH4LaHfeZKR+97Xef2LInVc0Jnl8RuT/vN/Yx6OO/l
NQo+K73guXdJP5/gto99uL3APqz2tQ+j/UMXlsQqtl9JrA5wDCYHhwaVxHo/
18PtwNBFJXE8yD7fclboupLu+hDXw+qw0NCSWLw4NKIk9kbah9vhztvSvdkH
jF7iPJi8LDSqJJ6Geg2YvtR5uzmOD4ejXQOXl9uH1TH24WpKaHJJvI4LjS2J
zyvs842nOg92xzsGqxNDE0pieIJjB7rfpJKYnuS8HX1uzsndudJ94WNGaHpJ
9/va0DUlcXtVaFpJHF9t/2A/o/4w5xLb23vnbK3dj17wPNNrHOXvM9Pv7uXQ
S36Xr9iH2zmh60ti9Qb7MHpT6MaSWMXOLYnVmx3jTi8I3VIS63NdD6vzQ/NK
YvUW+8d4ndkl3eNbXQ+3t4UWlsTbHSX9Lg5/d9qHz0XOa+fe7ANeFzsPzu8J
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
h5aYoB4etnnG/C7+VqxBr+Ec1IK53fwt4XP3UA/flWNDx7TE6B6hni2x2tN5
MLpnqFdLrPZyHqz29tgsrscaMNkntHdLd30fe+5rX3v47BfatyUODwod2BJn
B4T6t8Thfs6Dy/3tU9feqyUm+3uscD3WaFyPWrB+sNeA/wH2iWtwBhg+xGNw
e6g9/B0ROrwlJo+0XyI0KHRcSywdb7+4n/FO4fvo0FEtMX2U5y/q9z2wJZ4H
Oo+fCVu0dJ9g9ATXhbFTQ6e0xOdgj8HrEHv6y2HeNwydHDqppXt/YmhoSxyc
ZL+snzEfbk/zGvP7rNTiZw93nz3B3jDnweLp9txReBvdEq9nhYa3xC3xzJbu
L+OjWuL2bOdxL8/1fBgeGRrREt8jnMf9Pc957OOi0LiW9jXeHl7HOg8+z7fn
HtwSurmlvnCO14DRC0MX+F2Ps9/Uz5gP9xd7DRi+NHRJSxyOcq2t/Yw8GJ7g
PDicGLqsJS4vt4eNq0JTW2Jlmv2ufnZlS0xPDk1qie1Jng/PU0JXtNQ7rnAe
9/1WnxNWr3Zd+LgxdENLHE/3GNxeY7+P381NLXFA7vUt8Xxd6NqW2Ljevpef
Mb+P57HGdj7rBH+nj1vqv3B7m/fH3Xo19EpLvZ57cUZL3N4Rur0ltm/3HLi9
K3RnS3zf6Tzu9wOh+1vik3hfS6zf7Tnc34dCD7bE2ROhx1ti8kl7GH7YeTD5
iP1q3hf3e4Br39sSn4+FHm2J18ftj/Iz5sP9U17jMK/PXg92jXta6kH3eK/0
i6c9BxZfCD3vtd8Ive69vGnPO/uf/RDnPtcSzy96/jDPe62lfsH7frkl7l9y
3mke53twj98PvdcSo/zM/KAlPt8OvdVSr3k29ExL/egZ73uUc5k/3LnsD27f
8Xw4ftd+sPdLrZFekzG4/aSlewO3n9q343eYfqF9c3H5eeizlvj8zHmw+2Xo
i5YY/sJ59IWvPPaAaxW5eP029E1LrH5nz9393h5Wfwz90BKTv4d+a4m5X0O/
tMTkT86D0Z/tL3btr1vi8xePXeZ6rDHF9agF9394DXrBn/bjXYMzwPNfHoPh
v+1h8b/Qvy3xOUMuD2+zxV/Pmoul2XN5egTPZsnFepeIM+bim8h8mJ454ky5
2CaSx943ibhxLkbnyFUXPvKIrVx8zplrDF675vL0mn+8bzggN8vFQBoxycUE
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
32s596xCDAwPnVmIibPsV/cz5q/j78YaS/qs1FrB52CvcDbK35i+c0Po+kJc
nhc6txCfxDGF2D0/NLYQw2OdR1+4wGP0hdGuy12/KDSu0N0fb889vtgeFi8N
XVKIrcmhSYX4uzw0sRCfE5wHh5fZb+7aFxZidKLHtnY91ujuetSC7yu8Bn1h
iv1mrsEZ6BFXegwmp9rD4dWhaYXYm24PbzeFbizE1c32e/sZ7xTOrw1dU4jd
azy/t9/3dYX6wXXO28Dvm/cIr7e4LrzdE7q7EKu3egx2b7Onl1zlfR/o3LsK
8XBH6PZCjPHszkKc3+75MHyv1+jhs1KLP9fg9zZ+R4PD+5zHn3Fc4TF4fTj0
UCFuiQ8W4vXR0COFuH3EeXD7mMf4Tt+Evi7E55OhJwrd+6fsubtP28Pqs4X+
XQfu8suhlwox92LohUJMPuc8GH3e/hjXfrwQny947HjXY42TXI9acP+K16AX
vGo/0DU4Azy/5jEYft0eFv8XerMQn2/Z810/DH3g7/yR/Sg/o3fD+juhtwvx
/bbnwzR9/d1CbL/rvMP8vh8oxOvHrgtvX4W+LMTqJx6D3U/t6TVveN/jnPtF
IR4+D31WiI8v7M/3M+aP93djjTN8Vmod6r3Q+2DxW39j7k7ejp9XbfH6Y+iH
QtwSvy/E68+hnwpx+5Pz4PYXj9ELvnNd+Pw99Fuhe/+HPXf3T3tY/Tv0VyEm
u8T6M7bF3AwR/yvE5D/Og9F/7ae49q+F+PzPY9NcjzXgmHrUgvuZ2lqDXjBz
W/4K1+AM8DxLW2MwPGtbHhbniDh7W3x2jThnW++yHbFo6zt32vK8X57xTmE9
jZi0xTeR+bDK+87aYptI3gS/b94jvJZt1YW3eSLO3RarVVtjsFu35ek1s7W1
b3gid662eOgWsWmLD57h4ZxnzIfhedtag77DWakFe/x7S4zB7QJt/btM/Heg
+G9e8N+3gNWF4tmCbTG6aMRF2mKVuHBbrC7W1hh3eqmIS7bFOuPMh9UlIi7e
FquM4/mW20bcpq17vHRb8+F22YjLtMXbChGXb4u/Fdvy8LlcW3n0CGqzD3hd
qa08OF814iptsUI91oD5ldvKowcwjod71qEuPK/W1ny4XSPi6m0xuXbEtdri
krhmW2xsGHGDtthdp608+F63Lc+336itPDheP+J6bfFMJI87snFbeTC6SVse
JraKuGVbd3qLiJu3xeqmbeXB7mZtefoO++UMMEwuY/QR9st54IN61ILhrdta
A4b5Jvgz+R68v7b4266tbwarO0Tcvi0+u7fl4XLn0E5t8UncsS0+d/EY93j3
UI+2+Gac+fC5W2jXtvjsYU+PYJ3tfHd7ej6s7hnq1RZje4f2aou5PvYw2dt5
M7k2+4DRfZwH2/1C+7bFxx5eA877Oq/wOB5u9/McWN3fHlb728PS4aHD2mLx
wNABbfF5kD3MHeE82D3YY7B6SGhAW6wP8Nh8rndoW9we6jx6PfeO+wSrR7ou
jA0KHdcWG8eGjmmLy6NDR7XF8UD7hfyM+Ys6l7Hae+dsi7seteD4eK8BtyfY
w9hge5gbYg+rQ+1h+OTQSW0xRzyxrft6Ruj0thg+xXmweqo99/pM58HusNBp
bTF8mvO438Odx30/y553NDo0qi3ezgmNbIvjs50HtyPsV/VeWGMd5zIGk2ND
57XF7ijX4juM8Rpwfq79Rs7Fw+r5ns89vjo0rS2uJoQubYvVC0MXtMXuOHsY
uMx5cHuRx+D24tD4tpge77FtXO+Stni+xHnc7+leG7Ymui58TA1d2RarU0JX
tMXnpNDlbfE62X4HP2P+Ts5lbFPvnXPu4nrUguervEYPnxvPz0/YhVV4vjZ0
TVt36NnQMx6/IXS984jXtcXwTaEb22L+RufB7c0eo6dzv7h/cHtb6Na2uL3d
Hm7vsOe+3xW6sy3OHgjd3xaL94XubYvhu50Ht/fY7+vat7TF7b0e6+96rHGI
61ELph/0GvSCh+z7ugZngOeHPQafj9jD5+Ohx9ri9Ql7GHs+9JzP/IL9YD/j
ncLxU6En2+L5Sc8/3u/76bbYftp5e/p9X+t3+aLrwscbodfb4vglj8Hty/b0
lUe972HOfa0tVl8NvdIWu6/Zn+JnzIfzN73G0T4rteD5rbZ+PsHt2/Zw+449
rL5rD6MfhN5vi1Xie22x+qHHYPLT0Cdtsf6e58Ptx6GP2uL4E3u+5Zyd+D2y
o7v+mefD6hehz9ti8evQV22x94093H7pvDGuzT5g9FvnweQPoe/b4ulzrwHT
3zlvgsfxcPij58DlT/aw+rM9XP0b+qctXn8N/dIWn7/Z843/cx7s/u4xWP0z
9EdbDP/hMfrI36G/2mL6L+dd5HNzTu7ODB3VhY/Z4q9n7eh+zxJx5o647RJx
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
oc5j79eGrmnE69GuC28nhI5vxOpAj8HuMfb0l/7e95LOHdSIh+NCxzbiY5D9
Yn7G/KX93Vij9lmpNb/PwV5hcai/MT+rLgtNaMTrKaGTG3FLPKkRr6eFTm3E
7anOg9thHqMXnOi68Hlm6IxG9364PXf3LHtYHRE6uxGT54bGNGJudGhUIyZH
Og9Gz7FfzbVPb8TnKI+t5XqssYHrUQvuz/Ma9IKx9qu6BmeA5/M9BsMX2MPi
RaFxjfgcbw9zl4cmNuJqkv32fsY7hfVLQhc34vtiz9/W7/vSRmxf6rzl/b55
j/A62XXh7erQtEasXuEx2J1iT6+50Pvu4dyrGvEwNXRlIz6ust/Fz5gPw9O9
xuY+K7X4PaC7zwqH1ziPP+/gdzh+p4PXG0M3NOKWeH0jXm8O3dSI25ucB7e3
eIzv9HborUZ83h66rdG9v8Oeu3unPazeHbqr0V1+KPRgI+YeCN3fiMl7Q/c0
YvQ++36ufWsjPu/32AGuxxqHuR614P5hr0EveMR+X9fgDPD8qMdg+DF7WHwy
9EQjPp+y57u+GHrB3/kl+6F+Ru+G9WdCTzfi+2nPh2n6+rON2H7Web39vq9r
xOvLrgtv/wu92YjVVzwGu6/a02se977PcO4bjXh4PfRaIz7esD/Nz5g/3N+N
NY7xWam1p/dC74PFd/yNuTv/hv5pxOsHofcbcUt8rxGvH4U+bMTth86D2489
Ri9413Xh87PQp43u/ef23N0v7GH1q9CXjZj8IfR9I+a+C33biMmvnQej39iP
de1PGvH5rcfGuR5rTHA9asH9j16DXvCT/XmuwRng+WePwfAv9rD4e+i3Rnz+
Yc+7nKFb/Az3d56xmzzv9z+/U1j/K/RnI77/9Pzpft9/N2L7b+eN9PvmPcJr
l26qC29zRJy9m1idqZvGYHfmbvL0ml+9b3gid7Zu4mHWiLN0Ex88w8M5z5gP
w3N20xpTfFZqwV8Sz7qG/g+ZIVtd
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
U7pr01QPBZQDNbXCJugg95H9xp/ZEdhgInt+YX0jHAgunfPiYsDXNf6Dei9G
wVfsycWjZxrhqpdbbaMqAyTvZewqMxkD28EZfdmERrhcfIZrhw8D6Nw152gX
xmGJ+oK+2Mom0JjTUvcqQ5cjzUqn903AQ4tkozC3ZmjkecFmz86EpYfNn0ht
xe+Pay0rAhJa4eQr0exEcyao2H5y4MO57ouEnELa+Q6w5fsSMlTGBN9973Ul
Q3H+Hb44oaXbDaMTp1aH1TPB64i38bJUJjy6I20nlDsIH9/43VnXwIT490on
64uYsL8z/i/fbxqMl2RwLAYw4aZopbh7PBOGXjDd2A5PQPsSAVs5IwYIKG3c
vfiZAbfSb3oF86LnK+L5Sv+OAdspk6PW/BOw/0ybymcvJhRp63+8fGcYXrtK
ef9hoYFu7iX+7j4GODyM71Ww6ASnZYY+FNYBcOASfjB8hgH3tE7vzfOmgGb0
Sv3V/R2guHvaSZaNAVStY4ca9SvhmJzTOoPKZljCcmxFdz/OUTtF6eMva2BH
uPqFpextIOQTc/ARzuc5vAG6s4Nt4JEZ6XxroRdca+zctOQY8OTLJW760CDY
J636HpD9HfjOOEXGljCgmuWCc8kRdPLudl+q5zhURAYOJDgy4e6R1Utz5+jw
MKDtntptBgz3KqlH4nEys7X6oijDhLTHWaf6TJngqnUq+3cGzl1ymTYRiUzQ
t7avasXjfPlwtLlm+RjcuxDtdhePP1uFybkQ/PvOHCvF3RdpYNX+yI64phI9
H0c8ZS32tiIO5k3fcyF9E29AKenhT3WdSK/0ir5HOhsleYR0vcaoB6QfaFUL
IJ3Ds4efeHrfY/E56X5PNKL+9ejzF0iPMvn8jvTaKqNM0lV/j70mXWf1uibS
72/OrCL9ruTZtcTZE1qUOdKP3/UfJT3UPy6A9EFdrl3EU56ElA3ETRPNZCni
77hWnD3pB5QkVEjPnu6aIt1m+XAJ6YEcpQ9I38b8y9z673rsIXHi7LNvNc2k
p/AZShN/5w5ypJBexhN0gDjr/6qliPj77aHMCeJvwjO7D6T/5Wh/L4l9ZP1F
buLvjueS54m/TiAoTfxVq7LhIf6aiu8RJv7GCohqEH+zjMYMiL+THrpbiL+h
xeVyxF+2XRo/15PjJrVoSPz9zS6+jfiru4t3ciNx5IcE/SF2P7c4Q0Xs54+8
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
pyN+jvWTm977jgAz+pSm7QYmyPxdedSrpAfaH5qYtV0fBEURxfQMewbMsv1i
nPrSBE7vVu6ZOdQFcpSotidcDFz3PK9JG/gK5+cXIuqftsCRt7P9TlQ6+NgW
O/lKVcH501nSsUUt8I6bsuE+rpOUE36MXG1vhmZOvq8qBt2gb5/k6CrAgFDv
27c53vSD2palVTnUIeB/v6y/LYQBLgu3RVjc0cOWyGhD4THoXbjNZX+cCdm1
4Qc2itDh8xoN2YN1uO4rHE0qz2NCjU0+GweNAUPr52se7WDCqt6EHYE7GTCa
4D53Bdct3Mtf/TbFdYtY5/cllNhxaFzCyOD8woTpl3x+x/DvsxpJjAu9GYG7
T1w9o1uZ8L0/2HtjPvaMpS1rcC5fnfllmw7Oy9WDJ6664vF/zKm+wB8xCDHu
Me7EwStV5d3EX4Nb1XeJj7uu+fmS3vtxFQdxM71hNpj00PU+z0n/U+SgRnrG
CZ7Uf87uMkv9d985an8I6Vrj176SHn5y+2fSb/1x+0F657P3jH/XvRkb+0nn
muG0Jv4ei2kTJJ6mjn5Y9s9Ns7ML/+Zl6hVD0m33iciRLpp5Mo/4u7kmN4X0
2qgGB9IL7o0mEX87Hn5aQZyV750uJN22qLee+GunlOVBempyKD9xtnbD3HHi
77KbU3zEWauTScGkz7xeIUj8ZeoHdZAelR8gQfyVu3rRgfir7FFTRfzdpK0x
TPrnoFdGxF9Pe59ZMhfrVFIbib+eEjnsxN8zztSbxN+T7Wv+kLmY53ZJmhy5
/vzgtAHxd+vOeBfib+Hj4vuHsH9S0/7AhV33SvZp4m/hpZPfjmLXz5HP4iVz
dH9wkj+Zuy1TeTXJ+iEoz3EzmfcdfoUGYS/d+qrgPPbsgEEp4m9EHv048fds
krCpFTn++XsExcnrjK2ceIZ9It65yRW7icmTCGnsC/MLlVHYE9TOsD/BzuDf
vkIee8q4tUQS+b1KNY+nY5fUdRs+il0w2vdaOna7vM4NTdh/rznacgb77T/f
BPPJdYM2e0sWdPPm7+UJFmT+Hc9pqcSetq/hw0Hsj5wVtNzJPMv5yqCTrEN8
uMS8sO8vC90cQa5Xv5RL/Yl91Mo6tB/75h9OcSXYr4SLsK1DHw3uhP88h87K
Gcp1M8j1ljtJ/+3D3tRrc52GPXvku84O9PTYhXvuZtjPbFzTH4v+ipfs3u2C
Pa1kmCMa+0QLbZ0v+svinGLXjP3UgEYlFTtPXKRxGvrrwK3AqYHOSnoPvjiG
znJpWF8UQH9td9293oe9dFTKKQ978a+wl+Ox+LlN+c89Ev3NDj/9+CT6q7fb
fWgv+ivkba/gi/6K75QsY0N/l1SkSGxAf4saa49mob+Oz+fG6dj/FP4MTH9F
hV2fOl23o7/F0iwunOiv38kxHQX0d4dhafsS9He3LdsSb/R365C282QWOj40
63sO/d3LjAQ99HfM0XpRvICK85/LwSPor8fYf7Ox6G/Hw1I5hTL8/HRKNzB3
UIC1eqflffS3UsKqJameCsO2fvdCdlMgKC+rVgT9Xb6kOmlZDxXmXuc+tJHD
9Ukt25ssGzoEy2s2CjGp8OG6zMNPh/Fz8stLy9GeDmx2/SZjy2ggdJf78xJV
CqyzuCn91gXP37l+8yhRGgxvEndPOUOB65q3+Wrv4jw7Ox3/UZUGRi+G889c
ooDhyY1ex/3wfPzg6nPImQYrf3/6/NWRAkXp/+3Ne0EHh4JzIQ/SaTB0eL5z
pR8FHju2RY2m0uFdOGdq0m8aGG7I/Ho6hQI7Tqo+aPqE83ggC/st7RHImlPv
kq7F86vA8nhaLx3ef2cX6Po8Ahfkn16MnKPAwKn52CVLGVDmWtlP0xmF1QlO
fpxyjbDw4Wxa2R4G/M7/u1Nn5Rh0ME/r5d5tBKefa9ZYXGHATjchh+qJMVAN
NAly7GqErILQD42pDLgcznokpX8cpvULr2QWNsFGavE9/XEGJO5mzmsXTIDH
/S1bVr1rgZVS5tX+h5ngmqNtpUCul7d/9GJItMOD9s8jCQlM6G98oxEuhvMW
n5C36JFO4Nxx4zoV569IZeumpeiinoz8L2ZeP5zLCpHiw/k3U+jCAB/OZa/K
96TJjnyH29Mx6tX4vb+u5+5ni3QmhPUZuZcZj8ETGf/dL3E9UBB1duaqHBMS
7/7d0s7JgMCzC98T301AYmkxzyVnOqxW210ploFu/84IYLelgWpz6wfBk6Ow
8sGUrgJ6lUWtmr492Afvlu751H16CERFuA/u98L5csvm+2tXtsChbxGL5g+6
gWd6C88yQQa0ee9Vp6yuhpISO7Y7e1th/Ofz+1ljuD7eMLJL/sJXGBQus43R
aoF5XU0pn2E6XKLyyuwJbQKmn7a5/sou2KPh2LADX+fgTVWpy5v6wOt4ianS
4iC8GC0V0nRngEYry5HGQBp0lnOGnbAahX0rQtMypfH45hUduZQyAWJl0/17
rtLhjmK++A48HjpmPpZMnPsnzQ2sjNcwQfSWy8QnXD9UMyxXuz9mwlXHkLkH
+D4kqj098mHjBKwM0SmJwvVNZ6jwavKcm3CJzcjbZaNw48Y601w8/m+lfxy3
LWTCIFPso6sUFX5VS2Tvb2DCxq286qZvcL20qW1MbX4QgjJnDvDj+7iYnLf0
dAwTWvw9ajab9UPp3yKff89TnRpmI266Audj4ua9WfWnpDvGPVEi/exq9+R/
zz/7eKeQntzb40N66nBLGemL3n7FpC+8FBkkXW53/wjp6tu8ukh35WDVJc5a
z3jwEk8tf8z/Jb3e8Pl30pWC9+iQ7vR8Qpp4qmVXEEn8fWwkGEV62I8Ma9LL
jfM9iL9qsGGWdJ37rpmk28GpeOKv2ZF99sTfOrXNHMRZr1uRHMTfavnUJcTZ
K8kW90i/I57RSp7Leuy1p5D0x54h64mzzlYq3MTfO08ak4i/3NlWlaQr2wuN
keeiezasqiH+8g/eSCf+akvC7T3YZYOPKRJ/D9buaSD+SkmMTZPnokNV768j
/joufDtE/K2+lhZ1kMzpkboXiL/DObPLib99VybzjpD1TLS0IvHXZXhGnfgb
tOCZpkHmTYMzfeS5aE/2WGHib1G55U9d4v6wuqMQue/Q+T47mMyP1RdELLB7
GbrLbsNe8WZajvib5Zz8x4Xcz+U2dt6J3T+yfSASe9yDnlsB2Lfeqw2Tw/6R
N3ZZInareKuvr7Avj9u28QhZV1Sns6ZhP5981rYWe1jHlkenyXXpgOCzH7Ab
X32oPkuuS9jRi03J+/XBO6Qce7+6e5kMevq0teKNK/bNW0vut2P3Zkj2upLn
pYv2+D7FvqT6KzcD+8qz3GZN2DdVZ/XkE2e/XfZkRx+nDtzlPIbO+jg/j6SR
6wmbpU/uwv7CoGeSgp3N0ltGBD0NCvxx3pB4/dEu6AH6e6DvaeZl7NwDfWvD
sPs17bhsgf4mc239/QV7zT5ply7sO4/5u99DfyPOOnTJo7MWluf05dDZXXyb
uoeiqXBv7QbPr9j5J7vvJ2PPmUnyTEJ/HcT2Rd9Ff53nEmdk0d+MfCHdb/FU
aBt422eO/l6t2XJ2BHv4jTybuCQqyJdfueeF/v6xrhGsRn9/fGePFkJ/jVQa
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
NjQbKyo+FGwCTtEG4PoQ0P3cUzRbiA2dLrVy95h0UPudEb7PHt/f8ZAW+nsW
LO86NzxTTYfAvJFEfnzuPqs83u/pywJRA9Hq+Czk+JecDorLrLdBElS99K33
pcWUL14lpxBO+eKlfuNVVL10UH7yWSovfd35eibliws3H9Wm6qX1DhT3Ur7Y
Oq7XmspLa3aG0Q+h3lf5SI2ql3598N1byhfbLfDcSNVL+5ioJFD10gObGBOU
Lx4qrJpH1UubrJD2puqlWbmO+6l66brjThupemkXwfyFVL106K8fC6h66WHf
xvanqG+mKXYaUXXOq7cGUfXSQ3q+Jz+hfiK26wJVL+0iW6hM1Uvr6nAyOajn
ayQ/oeqlD53JukPVS59yO9y9Ennq/cBMj6qXfu24wJeql5Zf+rPFheoXHb/d
laqXljUTLmRS+++9hcpFqO8bEH7ykqrrflNxiQf5mO1/aq8ScpZl45Dfhbpf
ipgmVS/tn1I2loG63TvvH4upeulvV56aUn05rIuUzJG/2me+6FuhHmycvCiM
6ruluoirjPx1NTmrkU3VSyfk76+m8thT/LfVqT5aPkfdlyJn7VMfTcohZ3N/
duteRl+cNMef8QT1zhWNt65T/B2+XreaOq+0YtvG/chfg6onJcLI35oPCxv0
nzGgru7rciXk76fDg1lvURc7MC+mHX3xEV3LWU3k7x9JI9sI5K+USXr1qnQG
6J6Y3BKOvnhn42a5eKpe612y7Z5sBmzyc1DcvJIG6hsbtJnIZY5sTVtIHgPW
b7300FoJ45BEw6Q7VB8ttww/iXcYh7CEYuar0KBYJ4hMRV+coRo2YPuBAWzl
K97H1tGg5tmlzF0OyC/lawuqahngTGvgfaBGg8Dkp+lxTsgDnk9iQ20MeCwm
JMjWpMESx0nJclcuCM6wpd2YDFjWJrDxiT7yNHF5619PLqw/O5Oq+ZsBEsm7
/oltRx/No3j34VkulLAqOxylmXDZ2eNr3gEa9NUJR7MCuXDbaXHiET0mvDZk
DIofoUG39c27zte4oGcXwOg7zoThFyf2cj2Qm/9CiXsxXIjeoCK6Po4J21SO
5KmE0KDs1z4rjedceG/w7yRfOxMGdY91DSTQIAtWR8kXcuGK3PtFM+tGQfm/
Xda339Mg+fb1r+ebuMBw2p92PmYU3Oa9sZxm0ODG557tLya48IL/zHIF6TF4
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
Q7jsbiZ9kHBZqEXx/znFmnBzKckpNp3jfplwuXYgWoXsI6vwVfOTnGJ/x7sv
CJdvb+w0IPvIB4/WG5Cc4lvrlQ6Q9457ht6eJfvIau09peS948rM/hTy3jF3
eTWLcFkxScCX5BR7XOCXIjnFtAntJWQfWaiNPVSBunIhayvJKfa1HXQg7x3P
U3Yt+UrO9TKzeE/eO971iDpKcoqrU5z+IznFvtPDueS9Y/bQ8gLy3vGnc4lN
R8l5XN3z2eS9Y5+3P7RITrHOhqW6JKe4QKRlmrx3LL7/rCTJKe4yFKhdQNal
NWqSSE7x93966SSn+L9/rd23UP8qFPFHCHm6zWNTCskpLskcO6qF/DX9emh8
N+olXw5ok5xi5bH7PD7kbxN/zp97qGcx5DVJTnHL2Cb/2eiLN0JZ6Bzkr/L+
2ClR5Cx794ZqY+RyWLCe4g3U9ywW/OaFOszP+/0RuWxoLdutQc69NH0TO4l6
WqkYNYhcNp9R8fqH+llpkbpk5HKq6eSv08hlls+PRYLoi//YmsAp5HKR9LH7
Scjlh9ZHq8yQyxJfFo05I5d3XUzUT0YuV/rPFh1DLnsHf8p6hFzO00yLzUQu
+6SbrJtBLuvt4JTvRi5nWHm5/EUuJwoflo9FLpdFGUqZIpd337O6OYNcXm76
cx4NuWz4o1unG7k8d+UnNfEG9OmJVXuYyOUla9cx553ggmfQ0rGKdiZEKxtX
zl+PvE7+3LHgJBdWhLwyKB5iQseobl2INtZR9e3Kq87i/RRsLGqdwvpkQvW/
x/o0GH1Aswk9zwWJmJZSBclhyDyrc/Mncvmi6zypOF8uiE39bpy7fhj2CU0v
Z1nQIH5Facfza1y4oWGspG01DFttN7/SOU0DDf9FipdjuKA63vuxJwL93sGG
gborWIdsiVSIS8P6pEDBMPfdMNj0ZowXJtIg0neuSX8xF7Ysd3BYKIt8CPg2
+2ApDeYLVr4918KFcI8tvy4HjcCp7U5hlz7hOE86w/+EwvFzoWjNMf5RSBKz
vnhCmg59fvcN7BdT0J9golCUgfP7nk2N/UfoINg3MFJqQsH3sn/W2udYsL+P
iryUS4fM3Cq6/00K0vSm54q5s2HDYymVlxIMkBwcOlnQQIGX8XVPyx0csBOd
73I/ow0u7DWSP4t+b2UNlV65BetZev2T7u4OuDS90nPUhQeeLS8zj5+jwCwx
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
rp2SmGOAvpCxwnQy9zAbfiQv82bf4MGwdsinTfj3tXZt2P3NjQO7NvqzaMk8
sO+78qwROV/9XGbI7xQbbuUe6n74BjntsNX1vxfIK6NrmaVPRmAL59KV7ehz
tz/OiRNEn1t3suGu3rMhEPJ513q8iQf93iVnhNLRn84qUA3nfIL/tpjw+9by
QPeN0+SpeOSye81m+/Z+SJbpvAvoq7fdXqk6vAW5Xc1eHeTVC1tDZnYOhaKe
cfevfRPWEbdv15mf7wHX3UejPd154EzzUTW7TAHvyoeLm8u7QeBTWlmJLQ9M
n8sOXMJ5eqj/8teT67ph9imPY7JmyMfzHz9sxbrMgE9hznRVFxTkJgUtNUTO
9jrLWn5GbqpK3hi06gK9C89e1GziwWE689TzF1wImmxa8/tXJ9SEZvPFIO+1
Q3Wqo6O5oJ/+pnfjvU4wlJytoos+dyVX2fIX1rnh0//kXHU74XtZWn0u1jdD
1O6UqK1c0P6973VpL3LW3p3eKsCDBOksdW0JnCeWddd89e6AHZzhO2U/KdBO
uy4vNcTB52zux80LOsCc/dnNG8eVa9taZ/NSDjRN9Oar5bfDpkXlzksH0FfO
MhjcEc6BfK7oKTuDdnCetnv0shXvl7N3l/IxDtDkrA9f7EX/O1kec7aGApWq
wjbDtRy4GULfI+7ZBsuZe3PgOfJaIyauYzYHanVCaC9E2qBl1ZKvxrkU7FAy
1l/czQbmji03f+YwYNfrG9/i7qJv/XA2U+8hGyTumknv2MGAJpbnlu6bFLy8
vjTC5Twbynseue1agByX6M9hXKLAfImZzjd1Nph135sz9IMOtqpDPZZnKOh/
VTc3hcOCENOTYXZ9dFh9Y+cHVyusE2sbFgY9ZEHBxXmDNdV0qFe+GiuFdRL/
1tPVGe4sGJtjKiaWRweW07aNZroUiGbyOpZtQl88s2L53lg6qKw9c3otPtfX
rO6elsHnOqYq7UwsPtfzolY8qllOwTbpV78+NIzC65crdvxwpMO3gFxF8v7y
rpyMreS861+miQxyrkjQTOgasr6dbNyhT9a3nfimpcj69rqr4aXER3tmdRwl
69vyOZvV/3/edbwph/joKt5XcbK+vffIXHOyvj1n090fxEdXjiVIkPXtvw0D
7WR9+9rE2Xlkfdsj/bMWWd8+vHADP1nfjq+Rcyfr2xftabdIP1idat4+sr49
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
Igsmgm3Zshg06ND7XtX/ggwKUkWkTfjciZvK7dlrQ4fOL3Hmzn/JoHpNvI7Y
v9H+bqxA9QMdPnflhxK/G2sSfzbxgRfmnanSDwd5RsE6ao+24kEK8AT7/vC+
if151x4ZfdNRCDYU+fXrDAX8T4nHVUawYD5UbT1H2Cio2vNdfRpEgfxI3YWi
FBZ8dBMMOV02CvVPN52+GkkBIwunyeAsFjT4r50QGRuFvKaXS03PKKCb3TGs
kcfC51Wa+op/DDZsC1hof0uB1hT9LVxF2Cd/DrR7pjAGgoXX1zWUUGDLVY6j
Kz6xYP/7hbSbe8fgrUQjZ/dXCqTk/zTw/cwCB+ql8JWHxkAuhMl/qg5zSrdu
QlgFCxQO+IycOjoGWgl1G0oaMX+JT21I/8qCk9/I0nnHxmB+yXk6qJkCdUZ5
sYR/s7OcHIk5czAtazcxZ/51d18K4d8/89b3iDnzik2tmYR//wx+dSbyLxv5
Wh4xZ3bfs5RL5N+4FbZdhH/VF4oTiTlzuMLgbmLOXH+KjUH415LaxSTmzEKH
v0guED5dlgoi8q/nW/MDU8jV//us/ItYJ/0+407MmTeu9JIaQZ5WrK0zTcxd
ORIeE3Pmmi8TjcScOdzmIw8DufMm2XxiznygWDi0ArniCgn1YWK+3ZsYTcyZ
I68YHHiFXC9A/lQncnMTqT5izryTY6kwDLmJ9/gsMWcOoPpus0DueknCwAW5
i3HBiTLko5dvzhFz5radX7rUkPN8NH7/CrnEIMQT661KHvVjv9CnMvXXfxHr
rYdme/fJIhdMO6qSjXws6TWVWG9Vf8LVT6y3ugQaJRgjNz/I/4RYbx0JblAl
1lt/1FAXifVWa7m+/cR66+Y467gq5McVDg1rIA8XKllPrLdq+SnNxyCXXLLa
fDmG2MflOPgI+eNwVqUN8kKvv9dD0L9FYO6shNzvj34hH/Ld5CPslph/Xe06
nHPRvyo7N3x4iZ79u3m7KxX9q/My6pAocl2bmSgV5H++6aiw0L8fsuI+maJ/
FXN0m2PRv5sWzcMeYv7VmRUytsH8W3xRRv0b+pcnaXHpIeZfCec/n6TRyzun
hfz60b9M1/C4asy/ey7vD4xH/ypvXBmWg/5lMZ7Wc93E66BsEfcS82+KmaOk
0hEWhDE9s3kD6aAmx/9eayUF7pXFBh8wxue9tvrCDV866Grop23jx+fu0nJR
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
mwxp4v5SiTuxv/rSzpsvgvn6bonWdBUZzk8X/6xRZMHZ0Icqn1g0CO4STI58
SYbG/9K2vFzPgsxGo8TMChooTy5q1NxBX+/87pcmxAIdpvob7jAaBKQ/sko9
Tgb3ot2WjCUmtIQdsKQeoIHWjbsBadJkqNh2/W3MKBNKKzuW30yMwGkpub1s
nST4wtFxM4aEeeeA0YEtASNQzzVrG36XBDuZqo5cb/F42/HWrvFh2DFR91Jz
PQluFMRt2HsPj8+p7NmyexjsNm595ZrQDPcKVsvstGbC5vNKGr8shuBZn/w6
16km0KwZDM6VYMLUuc57shqDsPvT2uBqmSb4mkuffFfPgEvNoXqb8/vhV4he
6jfpRthxWrmx14sB8tHWwn66PTBTdbR1I6MeJJbkNwyIMkDXdle5UfF3cNAP
W1EVVgcX99/t9imegNy96YVSh6nwNq5dxWlnLeSdeX787MUJMKPFcxiQ6uFn
jHJmtGQNlIplRJjpTcCyg17SXsMqeLNsGsbrVg2TlTeetyhPwM7xW3qe5ArI
FVZTjV5bDSfPnt1O2jYB2u282xXyKqDrzZrQnNXVIHpOq+uJ5gQcfp2vx6dV
Ca7aCeyfD1bD0yqVcuWjExCt4JCS/KMahLerKys+weO1Maqgr5VE59bzXcV8
e78tqHVlDQineEdXo685rvrPTUU3Q2HyfeuKSCJfy+hv+TABto/7/HfxUqEr
Z/2PWZla4HNSfRLRPQFnCjQ2TZ/9BuHrDscPF9ZCZYaziggXAz5tqm2NaW2D
9uTPLiss62BVSerwlDIDCi8oXV8y6oBRNcNL/03WwTmrMFKqNQM4jTPsbEu6
QH0u98+FsHpQYJU8Nr7OAJFQDuoRrl5IyVBcs1GuAd5tWrKve8WAbY+a/ppE
9IFGlO0nkw8NmFur/pG/MaD07burN3gGYN7VQy5ufyM8PXlYSGaJATpFw7R7
ZQPow2xemdpGyOOeWxEiy4SCvWreXecHIUafs1PvUBNYevAJfT/IhHV10rKN
IkOgfu20yo0vTZBTc8LqrxsTUjRUTAdeD4EC6V7CNdVmCNqXum/sPhPm1ihc
IWkPg3RCVhL3k2b4eC4/PeIFEyxT/PZfqhwG2/BZt3//mmEpMOfObAUTvj45
tKETRmDTyN0jXqdIEC1w4sSGbuRnlS+seTcCoccH2s+9JYGgNs3IY4YJnd5K
O5WlaEDl6PhGXSLB1tgNL0f4WPBY1Pmo3hUafHtoqHzGiAzL+9gL/kizoCnu
N+V7Aw0MXo491H5EBlvSHsuyXSxY7sl6uG815izhfzNpdWTg/71LyAL7/HsX
3j6YtaEDZRfFafEvGYKehO6mY/1cqAmGaqyrDkrf9C5hXdVZOSRbjPn99NOB
5cRKOlDH9+VJbKNA5n2Xbf/cWKAUTJE+OoX8lvFzbR0KiNot7xn0xbrnpsC8
tmYUVtxPWy9vSoHIQalxwsuPVq0vXomePSb2YBPh5Qw74yrCy6SnKjsIL9cE
WhwmvFxznnaM8PITkeeBhJeLCoP/EPPqwYDFEMLLRvccjhBefuHxQ4jwco6W
gTbh5WlPWb2fxDrv8wRnwstn7snbE14OFHzSN0rk5eLEqhlirtsb9dkLedM1
ngedyPlXyPxkIu/fkKVKeLnn7p3rtcR6rkdQGg05NWj1VcLL3uHCdXnIOTa4
u/UgL1O/okd4uSanTSWWWNdmlDdRiPeMKgaVCS/b+KWreCP/lDyx4yvy4ji3
ciPk4k/ke/SRe9y70fCW8D4/70kt5BxVlCY+5J9/XHiWiFzfsWbfFuQtj3N+
VxD7ssyOBQQh99K3vLAKOePTjvvnkL/qVquyQX6FOfhhFr1p5qGSO0e8HyTM
fLwFuWGE/WMK8mc/5Y67Ijfxu+0wiZ5t9T/K95zY5zz7dCgfvRxYErAxE7m8
JWepO/INFXVvSejliQ22Y0bIx3+djtuE/PcYKTMPvfxPdBOpldj/XG35uQbv
n41y+iFGeP8Mf32apo98qqHIyQq56Oaja0LQy1c2lMSFoZf1Fq3PVBHrxbeN
dhqhl0U2+3Sno5cZGjJiwgQ38TwVgF4+GEdffQO9rBOjXaOEXl7OntScukuH
hsrMfGH08pyN72EB9LK/9mbfYPSyCa1DWA+9rHRYUP8Zevl23v51g0F0WDGi
enlhJeb3wTGzTmP0bPaoB9WfDl0mHR/XCxDfbzPN/R96ue9eWhTzPB1+L+hE
3EQvf5UOSq41wP8jp5VfsSP2vSocrrMcFKjU/aeiiV5+z3/lT7Il5lxl8lm/
BTJopOa8I/rnFu3YFCr2zxOl02yc2D9Xx73bKo5ePqormuqqRIfi+llpSicZ
/rPcs/fnDvw8WkbH5YTosP5EeGTfVzKQA8Yq5jZjv2d7p/H6BA00eD2P/sgk
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
nKNLP+r8w15mu1eThPle51x97GuFsC/umM+cTBfBnEtw60W87n1aca4Ye3my
/kws9nJM6TMlvO5tvk68Fnv5rfPZTuzlFB9VW7zuzbCOOR3naKEneyawl5m3
ZJXj98d8BqoksK+nEg434Bz9rtZDFa97vxHdYL72Paz5RZu1/UKvfA3B+48F
jaj9wTl6ILztCl73/mNcYIb7pv+dfcS+tu698l0Hr3sfOdS4D39X+kSWqRte
9466aXQUr3vfoOcfwfuPvf7s0YjfHzOiaNXg98d27cuJw9+Vdh5V+onfH7Nl
e6uC1731T4yE4O9Kx07dz8b7j8mbPQ3A+49lOvg2PwPOme3qgfcfm3vvo4/7
ptW1Hqvg70qH2xyg4P3H+lvMtuPvSmuu2Mjh70qHvDyiiL8rfXyLQRXef8yO
O71XH+9LppfXhPcfW4letsHflf4SUlO+AfhdKZN0/F1pQ4aCnfi70mdu3yRq
wb+OxzZ64O9K1xSNHsbflb7Dym9wCjgzl1y+Hf73ZfO3fuLvWDnFqy6Al++8
knaSA35ZKs2xHe8bFj8c8x9wc2+VjTPgWVM7lpIHwAuHb1x/Bl4+JvjgVg5w
rWPdih7Az21gDWsFLzOpSjOa4L7p/RLPxIETH34IFEOOVrHXdO4CLy8QTRYN
4OXpPjGKPvg6sD3+oB5wde7ezVbAj488/BmYAOPT7D8UBb72YXtZVgNePvJn
MlfzOhVpH5j/mQm+PmBYtHcD8L/M+mbHY+C+e9JX+IGvm1Pk7kqAr8tzLo21
XIX5f/HjPB03fs/fYfYv3se7MD3aIBzqnNmShW3g66/9N2djIUczixtmXLsM
4/lBJfYj5OjM0vn5UsjRXXzd6qYXqCh1Y+pZEnK0BWvMtNs++H/Rq8sg6kVF
ffXs5QrM7Ug8/eixS4Y0xJFxwjTKBcbTIVs8gL4dsXwcYmzWoyErpdOaVEuo
iwye9HH+IlClpr3tNm0aOmkmZx2vS0UPwsRmtk/C8yeuoP30Ljj/1jShLlkq
8i/f97q8l0BKBzf+i9hBQ5fcG4+5baSC1/0d/WoJVBDmrpAsi+vnHHJmmkTJ
dGPzE3lwnD0jRzTEINff+Kjb0kKicxaMv+jjCXSYbr+4G/ja+6wmUxv4muuW
+/p+8PU7Jd6vE5w0pJNLFvIlkyjrunPo76PwvPqx0Eljo6FlkdxE61DI17H0
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
J9H6Y1rr42He/g+nwLyz
    "]],
  AspectRatio->1,
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultDensityGradient", 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{1., 81.}, {1., 76.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.869965358675774*^9, {3.869965913753443*^9, 3.869965929700408*^9}},
 CellLabel->
  "Out[174]=",ExpressionUUID->"78d98e9f-1703-4cde-9b8c-f67289687fd0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{825, 730},
WindowMargins->{{Automatic, 68}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7f806718-04e3-4a6a-9b17-3e619fe91910"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 197, 3, 67, "Section",ExpressionUUID->"94f58027-8fdc-4dbc-8405-62b292ea7489"],
Cell[780, 27, 433, 9, 104, "Text",ExpressionUUID->"a5b1c13d-0ae4-4158-ac84-2a40d346d011"],
Cell[CellGroupData[{
Cell[1238, 40, 227, 4, 54, "Subsection",ExpressionUUID->"dfeaaa57-bd89-4116-98bf-ec8c6d8a8a5d"],
Cell[1468, 46, 3152, 86, 320, "Input",ExpressionUUID->"9ceeea7d-1b04-42db-8011-78e7956f095f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4657, 137, 173, 3, 54, "Subsection",ExpressionUUID->"f5c923a3-ee2c-4c24-aca7-aedd73b71cdd"],
Cell[4833, 142, 2337, 68, 257, "Input",ExpressionUUID->"fb2f8218-b213-40a2-807a-1c451b3fc065"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7207, 215, 251, 4, 54, "Subsection",ExpressionUUID->"0231e4e9-9faa-4b63-bd37-b10ccf78a956"],
Cell[7461, 221, 283, 6, 58, "Text",ExpressionUUID->"8a0db440-07c6-4b54-ac3c-503df848a7b5"],
Cell[7747, 229, 6696, 144, 467, "Input",ExpressionUUID->"6be0a5be-cc9f-495c-b886-47a5d1dcf48c"],
Cell[14446, 375, 257, 6, 35, "Text",ExpressionUUID->"d315e619-f6b7-4512-996e-35dc6adb1b35"],
Cell[14706, 383, 20191, 494, 1916, "Input",ExpressionUUID->"1701e115-c27f-449b-920f-68b1ec37a889"],
Cell[CellGroupData[{
Cell[34922, 881, 475, 11, 52, "Input",ExpressionUUID->"ba13c761-5895-448b-a7f2-9361621476bd"],
Cell[35400, 894, 1111, 28, 77, "Output",ExpressionUUID->"6110583d-433c-46fd-9059-1ad81a692da3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36560, 928, 280, 4, 54, "Subsection",ExpressionUUID->"b6b51e41-e082-48af-9a71-dc8b20588b8b"],
Cell[CellGroupData[{
Cell[36865, 936, 20346, 510, 1643, "Input",ExpressionUUID->"f0bdeb78-ef44-48be-b32a-dc23bf919caa"],
Cell[CellGroupData[{
Cell[57236, 1450, 480, 11, 24, "Print",ExpressionUUID->"3574e4e7-db60-4e68-970e-a128e1ffebe4"],
Cell[57719, 1463, 672, 18, 24, "Print",ExpressionUUID->"408f260e-05c4-41f1-bda8-a68da54a7432"],
Cell[58394, 1483, 644, 18, 24, "Print",ExpressionUUID->"21d1d253-4d01-42d8-90d4-8a9c4a0d2859"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59099, 1508, 228, 4, 54, "Subsection",ExpressionUUID->"3ad48065-d12e-40d4-8327-ce5b1b767f23"],
Cell[CellGroupData[{
Cell[59352, 1516, 33447, 855, 2525, "Input",ExpressionUUID->"27534735-e584-48e3-8825-994e263e60ec"],
Cell[CellGroupData[{
Cell[92824, 2375, 461, 11, 24, "Print",ExpressionUUID->"86e040a1-2cdc-4465-97a6-0022ffa56f5f"],
Cell[93288, 2388, 460, 11, 24, "Print",ExpressionUUID->"2c455bb5-42c2-41f8-baf9-5c818f971329"],
Cell[93751, 2401, 461, 11, 24, "Print",ExpressionUUID->"febdf826-0dbc-4ee6-bd06-edae22ee25ef"],
Cell[94215, 2414, 464, 11, 24, "Print",ExpressionUUID->"deaf79b7-57e7-430e-96c1-d44fe62a4cca"],
Cell[94682, 2427, 606, 14, 44, "Print",ExpressionUUID->"d290c3c2-1a32-42cd-951f-40dd9c64ef7f"]
}, Open  ]]
}, Open  ]],
Cell[95315, 2445, 151, 3, 30, "Input",ExpressionUUID->"a00b53ec-dce9-4bdf-b1d6-f527c52fc3b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95503, 2453, 234, 4, 54, "Subsection",ExpressionUUID->"c8d46709-a869-41b1-af80-ce77edab2763"],
Cell[CellGroupData[{
Cell[95762, 2461, 9292, 205, 677, "Input",ExpressionUUID->"dd7e6675-dfae-4b6d-96c2-709d8b58466b"],
Cell[CellGroupData[{
Cell[105079, 2670, 318, 8, 24, "Print",ExpressionUUID->"ef30a8f6-9b31-40cd-b203-bd97cd742042"],
Cell[105400, 2680, 385, 9, 24, "Print",ExpressionUUID->"00475adb-ce01-4441-8494-0c1e4bbe5d07"],
Cell[105788, 2691, 573, 16, 24, "Print",ExpressionUUID->"26199e5f-7979-44c8-bcc3-23b7f65bfdc3"],
Cell[106364, 2709, 544, 16, 24, "Print",ExpressionUUID->"a7be7fa4-fdfe-4dab-90d8-bbecf94ae745"],
Cell[106911, 2727, 383, 9, 24, "Print",ExpressionUUID->"a216f5fa-e66f-45b7-a9fb-c9e6c4f0d46a"],
Cell[107297, 2738, 573, 16, 24, "Print",ExpressionUUID->"2d466bfc-9476-40f4-bab9-878e61d7543c"],
Cell[107873, 2756, 547, 16, 24, "Print",ExpressionUUID->"c994f47a-d3ad-47fe-9261-730c45bc685a"],
Cell[108423, 2774, 381, 9, 24, "Print",ExpressionUUID->"bde67ea2-36e3-4dd7-be52-ae09f93745aa"],
Cell[108807, 2785, 384, 9, 24, "Print",ExpressionUUID->"9b800895-163e-42a5-b16a-3dffdc4778ff"],
Cell[109194, 2796, 385, 9, 24, "Print",ExpressionUUID->"acba7a34-163b-4f38-8c98-d8583acb2e01"],
Cell[109582, 2807, 386, 9, 24, "Print",ExpressionUUID->"bf2ec642-822b-4165-a690-74d019b907aa"],
Cell[109971, 2818, 533, 12, 44, "Print",ExpressionUUID->"3a5a8178-52ff-4aa7-b4d0-b4d2c59c56ea"],
Cell[110507, 2832, 587, 13, 24, "Print",ExpressionUUID->"aa12ec2b-c580-4492-b920-45a597e1cfc8"],
Cell[111097, 2847, 378, 9, 24, "Print",ExpressionUUID->"b90b8936-65ca-44cd-9568-ea061d1b19a7"],
Cell[111478, 2858, 386, 9, 24, "Print",ExpressionUUID->"b7e277a4-6a5f-435a-a1ea-7141f2304d69"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111925, 2874, 215, 4, 54, "Subsection",ExpressionUUID->"898f00eb-39dd-4c43-9020-6f861a285854"],
Cell[112143, 2880, 1552, 37, 89, "Input",ExpressionUUID->"81b805c5-f75e-4989-b9a3-8535a3cb3816"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113732, 2922, 213, 4, 54, "Subsection",ExpressionUUID->"1d69da6f-8b59-438d-9f92-eb7f97d9e28e"],
Cell[113948, 2928, 554, 9, 46, "Input",ExpressionUUID->"00312393-872c-4ac8-8fe7-6faeec20f670"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114539, 2942, 166, 3, 54, "Subsection",ExpressionUUID->"7cc433b7-dc6a-4be6-80f9-77a067aed1ee"],
Cell[114708, 2947, 165, 3, 35, "Text",ExpressionUUID->"fd7d8669-e576-486c-87d9-86cf300cdad0"],
Cell[114876, 2952, 4672, 134, 341, "Input",ExpressionUUID->"62a9e81e-4dc6-4d93-b44f-a49df5b59752"],
Cell[119551, 3088, 953, 24, 73, "Input",ExpressionUUID->"f06a92c6-3a60-43d0-b2ef-f0a415e0fe25"],
Cell[CellGroupData[{
Cell[120529, 3116, 446, 9, 52, "Input",ExpressionUUID->"e91da7b3-b9dc-404f-ab80-327fd18150e7"],
Cell[120978, 3127, 275071, 4528, 379, "Output",ExpressionUUID->"78d98e9f-1703-4cde-9b8c-f67289687fd0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

